


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; ======================================================
                       ==================================
    3 00000000         ; | Modulname:   main.s                                 
                         | Prozessor:  STM32G474        |
    4 00000000         ; |-----------------------------------------------------
                       ---------------------------------|
    5 00000000         ; | Ersteller:   P. Raab                                
                         | Datum: 02.11.2021            |
    6 00000000         ; |-----------------------------------------------------
                       ---------------------------------|
    7 00000000         ; | Version:   4.0               | Projekt:  Lauflicht  
                       V4| Assembler:  ARM-ASM          |
    8 00000000         ; |-----------------------------------------------------
                       ---------------------------------|
    9 00000000         ; | Aufgabe:                                            
                                                        |
   10 00000000         ; |    Es soll ein einfaches Lauflicht (8x LEDs der MCT-
                       Lehrplattform) mit einer         |
   11 00000000         ; |    Umschaltfrequenz von 500 ms  realisiert werden.  
                                                        |
   12 00000000         ; |    Die Wartezeit bzw. der Trigger zum Weiterschalten
                        soll über einen Timer realisiert|
   13 00000000         ; |    werden.                                          
                                                        |
   14 00000000         ; |    Das Lauflicht soll laufen, solange der Taster an 
                       Pin PC0 kurz gedrueckt wird.     |
   15 00000000         ; |    Bei erneuten Drücken des Tasters soll das Lauflic
                       ht stoppen.                      |
   16 00000000         ; |                                                     
                                                        |
   17 00000000         ; |-----------------------------------------------------
                       ---------------------------------|
   18 00000000         ; | Bemerkungen:                                        
                                                        |
   19 00000000         ; |    Die Tastendruckerkennung soll mittels EXTI Interr
                       upt erfolgen.                    |
   20 00000000         ; |                                                     
                                                        |
   21 00000000         ; |-----------------------------------------------------
                       ---------------------------------|
   22 00000000         ; | Aenderungen:                                        
                                                        |
   23 00000000         ; |     17.09.2020        P. Raab              Initialve
                       rsion                            |
   24 00000000         ; |     29.07.2021        P. Raab              Portierun
                       g auf STM32G474                  |
   25 00000000         ; |     15.10.2021        P. Raab              Erweiteru
                       ng auf Version V3 (Interrupts)   |
   26 00000000         ; |     02.11.2021        P. Raab              Erweiteru
                       ng auf Version V4 (Timer)        |
   27 00000000         ; |                                                     
                                                        |
   28 00000000         ; ======================================================
                       ==================================
   29 00000000         
   30 00000000         ; ------------------------------- includierte Dateien --
                       ----------------------------------
   31 00000000                 INCLUDE          STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 2 


    1 00000000         ;#######################################################
                       ###################
    2 00000000         ;  Peripheral_memory_map
    3 00000000         
    4 00000000 08000000 
                       FLASH_BASE
                               equ              (0x08000000) ; FLASH (up to 512
                                                             kB) base address 
    5 00000000 20000000 
                       SRAM1_BASE
                               equ              (0x20000000) ;  SRAM1(up to 80 
                                                            KB) base address */
                                                            
    6 00000000 20014000 
                       SRAM2_BASE
                               equ              (0x20014000) ;  SRAM2(16 KB) ba
                                                            se address */
    7 00000000 10000000 
                       CCMSRAM_BASE
                               equ              (0x10000000) ;  CCMSRAM(32 KB) 
                                                            base address */
    8 00000000 40000000 
                       PERIPH_BASE
                               equ              (0x40000000) ;  Peripheral base
                                                             address */
    9 00000000 60000000 
                       FMC_BASE
                               equ              (0x60000000) ;  FMC base addres
                                                            s */
   10 00000000 90000000 
                       QSPI_BASE
                               equ              (0x90000000) ;  QUADSPI memorie
                                                            s accessible over A
                                                            HB base address */
   11 00000000         
   12 00000000 A0000000 
                       FMC_R_BASE
                               equ              (0xA0000000) ;  FMC  control re
                                                            gisters base addres
                                                            s */
   13 00000000 A0001000 
                       QSPI_R_BASE
                               equ              (0xA0001000) ;  QUADSPI control
                                                             registers base add
                                                            ress */
   14 00000000 22000000 
                       SRAM1_BB_BASE
                               equ              (0x22000000) ;  SRAM1(80 KB) ba
                                                            se address in the b
                                                            it-band region */
   15 00000000 22280000 
                       SRAM2_BB_BASE
                               equ              (0x22280000) ;  SRAM2(16 KB) ba
                                                            se address in the b
                                                            it-band region */
   16 00000000 22300000 
                       CCMSRAM_BB_BASE
                               equ              (0x22300000) ;  CCMSRAM(32 KB) 
                                                            base address in the



ARM Macro Assembler    Page 3 


                                                             bit-band region */
                                                            
   17 00000000 42000000 
                       PERIPH_BB_BASE
                               equ              (0x42000000) ;  Peripheral base
                                                             address in the bit
                                                            -band region */
   18 00000000 E000E000 
                       SCS_BASE
                               equ              (0xE000E000) ; System Control S
                                                            pace Base Address  
                                                            
   19 00000000         
   20 00000000         ; Legacy defines 
   21 00000000 20000000 
                       SRAM_BASE
                               equ              SRAM1_BASE
   22 00000000 22000000 
                       SRAM_BB_BASE
                               equ              SRAM1_BB_BASE
   23 00000000         
   24 00000000 00014000 
                       SRAM1_SIZE_MAX
                               equ              (0x00014000) ;  maximum SRAM1 s
                                                            ize (up to 80 KByte
                                                            s) */
   25 00000000 00004000 
                       SRAM2_SIZE
                               equ              (0x00004000) ;  SRAM2 size (16 
                                                            KBytes) */
   26 00000000 00008000 
                       CCMSRAM_SIZE
                               equ              (0x00008000) ;  CCMSRAM size (3
                                                            2 KBytes) */
   27 00000000         
   28 00000000         ;  Peripheral memory map */
   29 00000000 40000000 
                       APB1PERIPH_BASE
                               equ              PERIPH_BASE
   30 00000000 40010000 
                       APB2PERIPH_BASE
                               equ              (PERIPH_BASE + 0x00010000)
   31 00000000 40020000 
                       AHB1PERIPH_BASE
                               equ              (PERIPH_BASE + 0x00020000)
   32 00000000 48000000 
                       AHB2PERIPH_BASE
                               equ              (PERIPH_BASE + 0x08000000)
   33 00000000         
   34 00000000 60000000 
                       FMC_BANK1
                               equ              FMC_BASE
   35 00000000 60000000 
                       FMC_BANK1_1
                               equ              FMC_BANK1
   36 00000000 64000000 
                       FMC_BANK1_2
                               equ              (FMC_BANK1 + 0x04000000)
   37 00000000 68000000 



ARM Macro Assembler    Page 4 


                       FMC_BANK1_3
                               equ              (FMC_BANK1 + 0x08000000)
   38 00000000 6C000000 
                       FMC_BANK1_4
                               equ              (FMC_BANK1 + 0x0C000000)
   39 00000000 80000000 
                       FMC_BANK3
                               equ              (FMC_BASE  + 0x20000000)
   40 00000000         
   41 00000000 E000E100 
                       NVIC_BASE
                               equ              (SCS_BASE +  0x0100) ;  NVIC Ba
                                                            se Address 
   42 00000000         
   43 00000000         ;  APB1 peripherals 
   44 00000000 40000000 
                       TIM2_BASE
                               equ              (APB1PERIPH_BASE + 0x0000)
   45 00000000 40000400 
                       TIM3_BASE
                               equ              (APB1PERIPH_BASE + 0x0400)
   46 00000000 40000800 
                       TIM4_BASE
                               equ              (APB1PERIPH_BASE + 0x0800)
   47 00000000 40000C00 
                       TIM5_BASE
                               equ              (APB1PERIPH_BASE + 0x0C00)
   48 00000000 40001000 
                       TIM6_BASE
                               equ              (APB1PERIPH_BASE + 0x1000)
   49 00000000 40001400 
                       TIM7_BASE
                               equ              (APB1PERIPH_BASE + 0x1400)
   50 00000000 40002000 
                       CRS_BASE
                               equ              (APB1PERIPH_BASE + 0x2000)
   51 00000000 40002400 
                       TAMP_BASE
                               equ              (APB1PERIPH_BASE + 0x2400)
   52 00000000 40002800 
                       RTC_BASE
                               equ              (APB1PERIPH_BASE + 0x2800)
   53 00000000 40002C00 
                       WWDG_BASE
                               equ              (APB1PERIPH_BASE + 0x2C00)
   54 00000000 40003000 
                       IWDG_BASE
                               equ              (APB1PERIPH_BASE + 0x3000)
   55 00000000 40003800 
                       SPI2_BASE
                               equ              (APB1PERIPH_BASE + 0x3800)
   56 00000000 40003C00 
                       SPI3_BASE
                               equ              (APB1PERIPH_BASE + 0x3C00)
   57 00000000 40004400 
                       USART2_BASE
                               equ              (APB1PERIPH_BASE + 0x4400)
   58 00000000 40004800 
                       USART3_BASE



ARM Macro Assembler    Page 5 


                               equ              (APB1PERIPH_BASE + 0x4800)
   59 00000000 40004C00 
                       UART4_BASE
                               equ              (APB1PERIPH_BASE + 0x4C00)
   60 00000000 40005000 
                       UART5_BASE
                               equ              (APB1PERIPH_BASE + 0x5000)
   61 00000000 40005400 
                       I2C1_BASE
                               equ              (APB1PERIPH_BASE + 0x5400)
   62 00000000 40005800 
                       I2C2_BASE
                               equ              (APB1PERIPH_BASE + 0x5800)
   63 00000000 40005C00 
                       USB_BASE
                               equ              (APB1PERIPH_BASE + 0x5C00) ;  U
                                                            SB_IP Peripheral Re
                                                            gisters base addres
                                                            s */
   64 00000000 40006000 
                       USB_PMAADDR
                               equ              (APB1PERIPH_BASE + 0x6000) ;  U
                                                            SB_IP Packet Memory
                                                             Area base address 
                                                            */
   65 00000000 40006400 
                       FDCAN1_BASE
                               equ              (APB1PERIPH_BASE + 0x6400)
   66 00000000 40006500 
                       FDCAN_CONFIG_BASE
                               equ              (APB1PERIPH_BASE + 0x6500) ;  F
                                                            DCAN configuration 
                                                            registers base addr
                                                            ess */
   67 00000000 40006800 
                       FDCAN2_BASE
                               equ              (APB1PERIPH_BASE + 0x6800)
   68 00000000 40006C00 
                       FDCAN3_BASE
                               equ              (APB1PERIPH_BASE + 0x6C00)
   69 00000000 40007000 
                       PWR_BASE
                               equ              (APB1PERIPH_BASE + 0x7000)
   70 00000000 40007800 
                       I2C3_BASE
                               equ              (APB1PERIPH_BASE + 0x7800)
   71 00000000 40007C00 
                       LPTIM1_BASE
                               equ              (APB1PERIPH_BASE + 0x7C00)
   72 00000000 40008000 
                       LPUART1_BASE
                               equ              (APB1PERIPH_BASE + 0x8000)
   73 00000000 40008400 
                       I2C4_BASE
                               equ              (APB1PERIPH_BASE + 0x8400)
   74 00000000 4000A000 
                       UCPD1_BASE
                               equ              (APB1PERIPH_BASE + 0xA000)
   75 00000000 4000A400 



ARM Macro Assembler    Page 6 


                       SRAMCAN_BASE
                               equ              (APB1PERIPH_BASE + 0xA400)
   76 00000000         
   77 00000000         ;  APB2 peripherals */
   78 00000000 40010000 
                       SYSCFG_BASE
                               equ              (APB2PERIPH_BASE + 0x0000)
   79 00000000 40010030 
                       VREFBUF_BASE
                               equ              (APB2PERIPH_BASE + 0x0030)
   80 00000000 40010200 
                       COMP1_BASE
                               equ              (APB2PERIPH_BASE + 0x0200)
   81 00000000 40010204 
                       COMP2_BASE
                               equ              (APB2PERIPH_BASE + 0x0204)
   82 00000000 40010208 
                       COMP3_BASE
                               equ              (APB2PERIPH_BASE + 0x0208)
   83 00000000 4001020C 
                       COMP4_BASE
                               equ              (APB2PERIPH_BASE + 0x020C)
   84 00000000 40010210 
                       COMP5_BASE
                               equ              (APB2PERIPH_BASE + 0x0210)
   85 00000000 40010214 
                       COMP6_BASE
                               equ              (APB2PERIPH_BASE + 0x0214)
   86 00000000 40010218 
                       COMP7_BASE
                               equ              (APB2PERIPH_BASE + 0x0218)
   87 00000000 40010300 
                       OPAMP_BASE
                               equ              (APB2PERIPH_BASE + 0x0300)
   88 00000000 40010300 
                       OPAMP1_BASE
                               equ              (APB2PERIPH_BASE + 0x0300)
   89 00000000 40010304 
                       OPAMP2_BASE
                               equ              (APB2PERIPH_BASE + 0x0304)
   90 00000000 40010308 
                       OPAMP3_BASE
                               equ              (APB2PERIPH_BASE + 0x0308)
   91 00000000 4001030C 
                       OPAMP4_BASE
                               equ              (APB2PERIPH_BASE + 0x030C)
   92 00000000 40010310 
                       OPAMP5_BASE
                               equ              (APB2PERIPH_BASE + 0x0310)
   93 00000000 40010314 
                       OPAMP6_BASE
                               equ              (APB2PERIPH_BASE + 0x0314)
   94 00000000         
   95 00000000 40010400 
                       EXTI_BASE
                               equ              (APB2PERIPH_BASE + 0x0400)
   96 00000000 40012C00 
                       TIM1_BASE
                               equ              (APB2PERIPH_BASE + 0x2C00)



ARM Macro Assembler    Page 7 


   97 00000000 40013000 
                       SPI1_BASE
                               equ              (APB2PERIPH_BASE + 0x3000)
   98 00000000 40013400 
                       TIM8_BASE
                               equ              (APB2PERIPH_BASE + 0x3400)
   99 00000000 40013800 
                       USART1_BASE
                               equ              (APB2PERIPH_BASE + 0x3800)
  100 00000000 40013C00 
                       SPI4_BASE
                               equ              (APB2PERIPH_BASE + 0x3C00)
  101 00000000 40014000 
                       TIM15_BASE
                               equ              (APB2PERIPH_BASE + 0x4000)
  102 00000000 40014400 
                       TIM16_BASE
                               equ              (APB2PERIPH_BASE + 0x4400)
  103 00000000 40014800 
                       TIM17_BASE
                               equ              (APB2PERIPH_BASE + 0x4800)
  104 00000000 40015000 
                       TIM20_BASE
                               equ              (APB2PERIPH_BASE + 0x5000)
  105 00000000 40015400 
                       SAI1_BASE
                               equ              (APB2PERIPH_BASE + 0x5400)
  106 00000000 40015404 
                       SAI1_Block_A_BASE
                               equ              (SAI1_BASE + 0x0004)
  107 00000000 40015424 
                       SAI1_Block_B_BASE
                               equ              (SAI1_BASE + 0x0024)
  108 00000000 40016800 
                       HRTIM1_BASE
                               equ              (APB2PERIPH_BASE + 0x6800)
  109 00000000 40016880 
                       HRTIM1_TIMA_BASE
                               equ              (HRTIM1_BASE + 0x0080)
  110 00000000 40016900 
                       HRTIM1_TIMB_BASE
                               equ              (HRTIM1_BASE + 0x0100)
  111 00000000 40016980 
                       HRTIM1_TIMC_BASE
                               equ              (HRTIM1_BASE + 0x0180)
  112 00000000 40016A00 
                       HRTIM1_TIMD_BASE
                               equ              (HRTIM1_BASE + 0x0200)
  113 00000000 40016A80 
                       HRTIM1_TIME_BASE
                               equ              (HRTIM1_BASE + 0x0280)
  114 00000000 40016B00 
                       HRTIM1_TIMF_BASE
                               equ              (HRTIM1_BASE + 0x0300)
  115 00000000 40016B80 
                       HRTIM1_COMMON_BASE
                               equ              (HRTIM1_BASE + 0x0380)
  116 00000000         
  117 00000000         ;  AHB1 peripherals */



ARM Macro Assembler    Page 8 


  118 00000000 40020000 
                       DMA1_BASE
                               equ              (AHB1PERIPH_BASE)
  119 00000000 40020400 
                       DMA2_BASE
                               equ              (AHB1PERIPH_BASE + 0x0400)
  120 00000000 40020800 
                       DMAMUX1_BASE
                               equ              (AHB1PERIPH_BASE + 0x0800)
  121 00000000 40020C00 
                       CORDIC_BASE
                               equ              (AHB1PERIPH_BASE + 0x0C00)
  122 00000000 40021000 
                       RCC_BASE
                               equ              (AHB1PERIPH_BASE + 0x1000)
  123 00000000 40021400 
                       FMAC_BASE
                               equ              (AHB1PERIPH_BASE + 0x1400)
  124 00000000 40022000 
                       FLASH_R_BASE
                               equ              (AHB1PERIPH_BASE + 0x2000)
  125 00000000 40023000 
                       CRC_BASE
                               equ              (AHB1PERIPH_BASE + 0x3000)
  126 00000000         
  127 00000000 40020008 
                       DMA1_Channel1_BASE
                               equ              (DMA1_BASE + 0x0008)
  128 00000000 4002001C 
                       DMA1_Channel2_BASE
                               equ              (DMA1_BASE + 0x001C)
  129 00000000 40020030 
                       DMA1_Channel3_BASE
                               equ              (DMA1_BASE + 0x0030)
  130 00000000 40020044 
                       DMA1_Channel4_BASE
                               equ              (DMA1_BASE + 0x0044)
  131 00000000 40020058 
                       DMA1_Channel5_BASE
                               equ              (DMA1_BASE + 0x0058)
  132 00000000 4002006C 
                       DMA1_Channel6_BASE
                               equ              (DMA1_BASE + 0x006C)
  133 00000000 40020080 
                       DMA1_Channel7_BASE
                               equ              (DMA1_BASE + 0x0080)
  134 00000000 40020094 
                       DMA1_Channel8_BASE
                               equ              (DMA1_BASE + 0x0094)
  135 00000000         
  136 00000000 40020408 
                       DMA2_Channel1_BASE
                               equ              (DMA2_BASE + 0x0008)
  137 00000000 4002041C 
                       DMA2_Channel2_BASE
                               equ              (DMA2_BASE + 0x001C)
  138 00000000 40020430 
                       DMA2_Channel3_BASE
                               equ              (DMA2_BASE + 0x0030)



ARM Macro Assembler    Page 9 


  139 00000000 40020444 
                       DMA2_Channel4_BASE
                               equ              (DMA2_BASE + 0x0044)
  140 00000000 40020458 
                       DMA2_Channel5_BASE
                               equ              (DMA2_BASE + 0x0058)
  141 00000000 4002046C 
                       DMA2_Channel6_BASE
                               equ              (DMA2_BASE + 0x006C)
  142 00000000 40020480 
                       DMA2_Channel7_BASE
                               equ              (DMA2_BASE + 0x0080)
  143 00000000 40020494 
                       DMA2_Channel8_BASE
                               equ              (DMA2_BASE + 0x0094)
  144 00000000         
  145 00000000 40020800 
                       DMAMUX1_Channel0_BASE
                               equ              (DMAMUX1_BASE)
  146 00000000 40020804 
                       DMAMUX1_Channel1_BASE
                               equ              (DMAMUX1_BASE + 0x0004)
  147 00000000 40020808 
                       DMAMUX1_Channel2_BASE
                               equ              (DMAMUX1_BASE + 0x0008)
  148 00000000 4002080C 
                       DMAMUX1_Channel3_BASE
                               equ              (DMAMUX1_BASE + 0x000C)
  149 00000000 40020810 
                       DMAMUX1_Channel4_BASE
                               equ              (DMAMUX1_BASE + 0x0010)
  150 00000000 40020814 
                       DMAMUX1_Channel5_BASE
                               equ              (DMAMUX1_BASE + 0x0014)
  151 00000000 40020818 
                       DMAMUX1_Channel6_BASE
                               equ              (DMAMUX1_BASE + 0x0018)
  152 00000000 4002081C 
                       DMAMUX1_Channel7_BASE
                               equ              (DMAMUX1_BASE + 0x001C)
  153 00000000 40020820 
                       DMAMUX1_Channel8_BASE
                               equ              (DMAMUX1_BASE + 0x0020)
  154 00000000 40020824 
                       DMAMUX1_Channel9_BASE
                               equ              (DMAMUX1_BASE + 0x0024)
  155 00000000 40020828 
                       DMAMUX1_Channel10_BASE
                               equ              (DMAMUX1_BASE + 0x0028)
  156 00000000 4002082C 
                       DMAMUX1_Channel11_BASE
                               equ              (DMAMUX1_BASE + 0x002C)
  157 00000000 40020830 
                       DMAMUX1_Channel12_BASE
                               equ              (DMAMUX1_BASE + 0x0030)
  158 00000000 40020834 
                       DMAMUX1_Channel13_BASE
                               equ              (DMAMUX1_BASE + 0x0034)
  159 00000000 40020838 



ARM Macro Assembler    Page 10 


                       DMAMUX1_Channel14_BASE
                               equ              (DMAMUX1_BASE + 0x0038)
  160 00000000 4002083C 
                       DMAMUX1_Channel15_BASE
                               equ              (DMAMUX1_BASE + 0x003C)
  161 00000000 40020900 
                       DMAMUX1_RequestGenerator0_BASE
                               equ              (DMAMUX1_BASE + 0x0100)
  162 00000000 40020904 
                       DMAMUX1_RequestGenerator1_BASE
                               equ              (DMAMUX1_BASE + 0x0104)
  163 00000000 40020908 
                       DMAMUX1_RequestGenerator2_BASE
                               equ              (DMAMUX1_BASE + 0x0108)
  164 00000000 4002090C 
                       DMAMUX1_RequestGenerator3_BASE
                               equ              (DMAMUX1_BASE + 0x010C)
  165 00000000         
  166 00000000 40020880 
                       DMAMUX1_ChannelStatus_BASE
                               equ              (DMAMUX1_BASE + 0x0080)
  167 00000000 40020940 
                       DMAMUX1_RequestGenStatus_BASE
                               equ              (DMAMUX1_BASE + 0x0140)
  168 00000000         
  169 00000000         ;  AHB2 peripherals */
  170 00000000 48000000 
                       GPIOA_BASE
                               equ              (AHB2PERIPH_BASE + 0x0000)
  171 00000000 48000400 
                       GPIOB_BASE
                               equ              (AHB2PERIPH_BASE + 0x0400)
  172 00000000 48000800 
                       GPIOC_BASE
                               equ              (AHB2PERIPH_BASE + 0x0800)
  173 00000000 48000C00 
                       GPIOD_BASE
                               equ              (AHB2PERIPH_BASE + 0x0C00)
  174 00000000 48001000 
                       GPIOE_BASE
                               equ              (AHB2PERIPH_BASE + 0x1000)
  175 00000000 48001400 
                       GPIOF_BASE
                               equ              (AHB2PERIPH_BASE + 0x1400)
  176 00000000 48001800 
                       GPIOG_BASE
                               equ              (AHB2PERIPH_BASE + 0x1800)
  177 00000000         
  178 00000000 50000000 
                       ADC1_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000000)
  179 00000000 50000100 
                       ADC2_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000100)
  180 00000000 50000300 
                       ADC12_COMMON_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000300)
  181 00000000 50000400 
                       ADC3_BASE



ARM Macro Assembler    Page 11 


                               equ              (AHB2PERIPH_BASE + 0x08000400)
  182 00000000 50000500 
                       ADC4_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000500)
  183 00000000 50000600 
                       ADC5_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000600)
  184 00000000 50000700 
                       ADC345_COMMON_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000700)
  185 00000000         
  186 00000000 50000800 
                       DAC_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000800)
  187 00000000 50000800 
                       DAC1_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000800)
  188 00000000 50000C00 
                       DAC2_BASE
                               equ              (AHB2PERIPH_BASE + 0x08000C00)
  189 00000000 50001000 
                       DAC3_BASE
                               equ              (AHB2PERIPH_BASE + 0x08001000)
  190 00000000 50001400 
                       DAC4_BASE
                               equ              (AHB2PERIPH_BASE + 0x08001400)
  191 00000000         
  192 00000000         ;  FMC Banks registers base  address */
  193 00000000 A0000000 
                       FMC_Bank1_R_BASE
                               equ              (FMC_R_BASE + 0x0000)
  194 00000000 A0000104 
                       FMC_Bank1E_R_BASE
                               equ              (FMC_R_BASE + 0x0104)
  195 00000000 A0000080 
                       FMC_Bank3_R_BASE
                               equ              (FMC_R_BASE + 0x0080)
  196 00000000 50060800 
                       RNG_BASE
                               equ              (AHB2PERIPH_BASE + 0x08060800)
  197 00000000         ; Debug MCU registers base address */
  198 00000000 E0042000 
                       DBGMCU_BASE
                               equ              (0xE0042000)
  199 00000000         
  200 00000000 1FFF7500 
                       PACKAGE_BASE
                               equ              (0x1FFF7500) ;  Package data re
                                                            gister base address
                                                                 */
  201 00000000 1FFF7590 
                       UID_BASE
                               equ              (0x1FFF7590) ;  Unique device I
                                                            D register base add
                                                            ress */
  202 00000000 1FFF75E0 
                       FLASHSIZE_BASE
                               equ              (0x1FFF75E0) ;  Flash size data
                                                             register base addr



ARM Macro Assembler    Page 12 


                                                            ess  */
  203 00000000         
  204 00000000         
  205 00000000         ;#######################################################
                       ###
  206 00000000         ; @addtogroup Peripheral_declaration
  207 00000000         
  208 00000000         ;TIM2                ((TIM_TypeDef *) TIM2_BASE)
  209 00000000         ;TIM3                ((TIM_TypeDef *) TIM3_BASE)
  210 00000000         ;TIM4                ((TIM_TypeDef *) TIM4_BASE)
  211 00000000         ;TIM5                ((TIM_TypeDef *) TIM5_BASE)
  212 00000000         ;TIM6                ((TIM_TypeDef *) TIM6_BASE)
  213 00000000         ;TIM7                ((TIM_TypeDef *) TIM7_BASE)
  214 00000000         ;CRS                 ((CRS_TypeDef *) CRS_BASE)
  215 00000000         ;TAMP                ((TAMP_TypeDef *) TAMP_BASE)
  216 00000000         ;RTC                 ((RTC_TypeDef *) RTC_BASE)
  217 00000000         ;WWDG                ((WWDG_TypeDef *) WWDG_BASE)
  218 00000000         ;IWDG                ((IWDG_TypeDef *) IWDG_BASE)
  219 00000000         ;SPI2                ((SPI_TypeDef *) SPI2_BASE)
  220 00000000         ;SPI3                ((SPI_TypeDef *) SPI3_BASE)
  221 00000000         ;USART2              ((USART_TypeDef *) USART2_BASE)
  222 00000000         ;USART3              ((USART_TypeDef *) USART3_BASE)
  223 00000000         ;UART4               ((USART_TypeDef *) UART4_BASE)
  224 00000000         ;UART5               ((USART_TypeDef *) UART5_BASE)
  225 00000000         ;I2C1                ((I2C_TypeDef *) I2C1_BASE)
  226 00000000         ;I2C2                ((I2C_TypeDef *) I2C2_BASE)
  227 00000000         ;USB                 ((USB_TypeDef *) USB_BASE)
  228 00000000         ;FDCAN1              ((FDCAN_GlobalTypeDef *) FDCAN1_BAS
                       E)
  229 00000000         ;FDCAN_CONFIG        ((FDCAN_Config_TypeDef *) FDCAN_CON
                       FIG_BASE)
  230 00000000         ;FDCAN2              ((FDCAN_GlobalTypeDef *) FDCAN2_BAS
                       E)
  231 00000000         ;FDCAN3              ((FDCAN_GlobalTypeDef *) FDCAN3_BAS
                       E)
  232 00000000         ;PWR                 ((PWR_TypeDef *) PWR_BASE)
  233 00000000         ;I2C3                ((I2C_TypeDef *) I2C3_BASE)
  234 00000000         ;LPTIM1              ((LPTIM_TypeDef *) LPTIM1_BASE)
  235 00000000         ;LPUART1             ((USART_TypeDef *) LPUART1_BASE)
  236 00000000         ;I2C4                ((I2C_TypeDef *) I2C4_BASE)
  237 00000000         ;UCPD1              ((UCPD_TypeDef *) UCPD1_BASE)
  238 00000000         
  239 00000000         ;SYSCFG              ((SYSCFG_TypeDef *) SYSCFG_BASE)
  240 00000000         ;VREFBUF             ((VREFBUF_TypeDef *) VREFBUF_BASE)
  241 00000000         ;COMP1               ((COMP_TypeDef *) COMP1_BASE)
  242 00000000         ;COMP2               ((COMP_TypeDef *) COMP2_BASE)
  243 00000000         ;COMP3               ((COMP_TypeDef *) COMP3_BASE)
  244 00000000         ;COMP4               ((COMP_TypeDef *) COMP4_BASE)
  245 00000000         ;COMP5               ((COMP_TypeDef *) COMP5_BASE)
  246 00000000         ;COMP6               ((COMP_TypeDef *) COMP6_BASE)
  247 00000000         ;COMP7               ((COMP_TypeDef *) COMP7_BASE)
  248 00000000         
  249 00000000         ;OPAMP               ((OPAMP_TypeDef *) OPAMP_BASE)
  250 00000000         ;OPAMP1              ((OPAMP_TypeDef *) OPAMP1_BASE)
  251 00000000         ;OPAMP2              ((OPAMP_TypeDef *) OPAMP2_BASE)
  252 00000000         ;OPAMP3              ((OPAMP_TypeDef *) OPAMP3_BASE)
  253 00000000         ;OPAMP4              ((OPAMP_TypeDef *) OPAMP4_BASE)
  254 00000000         ;OPAMP5              ((OPAMP_TypeDef *) OPAMP5_BASE)
  255 00000000         ;OPAMP6              ((OPAMP_TypeDef *) OPAMP6_BASE)



ARM Macro Assembler    Page 13 


  256 00000000         
  257 00000000         ;EXTI                ((EXTI_TypeDef *) EXTI_BASE)
  258 00000000         ;TIM1                ((TIM_TypeDef *) TIM1_BASE)
  259 00000000         ;SPI1                ((SPI_TypeDef *) SPI1_BASE)
  260 00000000         ;TIM8                ((TIM_TypeDef *) TIM8_BASE)
  261 00000000         ;USART1              ((USART_TypeDef *) USART1_BASE)
  262 00000000         ;SPI4                ((SPI_TypeDef *) SPI4_BASE)
  263 00000000         ;TIM15               ((TIM_TypeDef *) TIM15_BASE)
  264 00000000         ;TIM16               ((TIM_TypeDef *) TIM16_BASE)
  265 00000000         ;TIM17               ((TIM_TypeDef *) TIM17_BASE)
  266 00000000         ;TIM20               ((TIM_TypeDef *) TIM20_BASE)
  267 00000000         ;SAI1                ((SAI_TypeDef *) SAI1_BASE)
  268 00000000         ;SAI1_Block_A        ((SAI_Block_TypeDef *)SAI1_Block_A_
                       BASE)
  269 00000000         ;SAI1_Block_B        ((SAI_Block_TypeDef *)SAI1_Block_B_
                       BASE)
  270 00000000         ;HRTIM1              ((HRTIM_TypeDef *) HRTIM1_BASE)
  271 00000000         ;HRTIM1_TIMA         ((HRTIM_Timerx_TypeDef *) HRTIM1_TI
                       MA_BASE)
  272 00000000         ;HRTIM1_TIMB         ((HRTIM_Timerx_TypeDef *) HRTIM1_TI
                       MB_BASE)
  273 00000000         ;HRTIM1_TIMC         ((HRTIM_Timerx_TypeDef *) HRTIM1_TI
                       MC_BASE)
  274 00000000         ;HRTIM1_TIMD         ((HRTIM_Timerx_TypeDef *) HRTIM1_TI
                       MD_BASE)
  275 00000000         ;HRTIM1_TIME         ((HRTIM_Timerx_TypeDef *) HRTIM1_TI
                       ME_BASE)
  276 00000000         ;HRTIM1_TIMF         ((HRTIM_Timerx_TypeDef *) HRTIM1_TI
                       MF_BASE)
  277 00000000         ;HRTIM1_COMMON       ((HRTIM_Common_TypeDef *) HRTIM1_CO
                       MMON_BASE)
  278 00000000         ;DMA1                ((DMA_TypeDef *) DMA1_BASE)
  279 00000000         ;DMA2                ((DMA_TypeDef *) DMA2_BASE)
  280 00000000         ;DMAMUX1             ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _BASE)
  281 00000000         ;CORDIC              ((CORDIC_TypeDef *) CORDIC_BASE)
  282 00000000         
  283 00000000         
  284 00000000         
  285 00000000         
  286 00000000         ;##############################################
  287 00000000         ;RCC                 
  288 00000000 40021000 
                       RCC_CR  equ              (RCC_BASE + 0x00) ; RCC clock c
                                                            ontrol register,   
                                                                               
                                                                               
                                                                 Address offset
                                                            : 0x00 */
  289 00000000 40021004 
                       RCC_ICSCR
                               equ              (RCC_BASE + 0x04) ; RCC interna
                                                            l clock sources cal
                                                            ibration register, 
                                                                               
                                                                 Address offset
                                                            : 0x04 */
  290 00000000 40021008 
                       RCC_CFGR



ARM Macro Assembler    Page 14 


                               equ              (RCC_BASE + 0x08) ; RCC clock c
                                                            onfiguration regist
                                                            er,                
                                                                               
                                                                 Address offset
                                                            : 0x08 */
  291 00000000 4002100C 
                       RCC_PLLCFGR
                               equ              (RCC_BASE + 0x0C) ; RCC system 
                                                            PLL configuration r
                                                            egister,           
                                                                               
                                                                 Address offset
                                                            : 0x0C */
  292 00000000 40021018 
                       RCC_CIER
                               equ              (RCC_BASE + 0x18) ; RCC clock i
                                                            nterrupt enable reg
                                                            ister,             
                                                                               
                                                                 Address offset
                                                            : 0x18 */
  293 00000000 4002101C 
                       RCC_CIFR
                               equ              (RCC_BASE + 0x1C) ; RCC clock i
                                                            nterrupt flag regis
                                                            ter,               
                                                                               
                                                                 Address offset
                                                            : 0x1C */
  294 00000000 40021020 
                       RCC_CICR
                               equ              (RCC_BASE + 0x20) ; RCC clock i
                                                            nterrupt clear regi
                                                            ster,              
                                                                               
                                                                 Address offset
                                                            : 0x20 */
  295 00000000 40021028 
                       RCC_AHB1RSTR
                               equ              (RCC_BASE + 0x28) ; RCC AHB1 pe
                                                            ripheral reset regi
                                                            ster,              
                                                                               
                                                                 Address offset
                                                            : 0x28 */
  296 00000000 4002102C 
                       RCC_AHB2RSTR
                               equ              (RCC_BASE + 0x2C) ; RCC AHB2 pe
                                                            ripheral reset regi
                                                            ster,              
                                                                               
                                                                 Address offset
                                                            : 0x2C */
  297 00000000 40021030 
                       RCC_AHB3RSTR
                               equ              (RCC_BASE + 0x30) ; RCC AHB3 pe
                                                            ripheral reset regi
                                                            ster,              



ARM Macro Assembler    Page 15 


                                                                               
                                                                 Address offset
                                                            : 0x30 */
  298 00000000 40021038 
                       RCC_APB1RSTR1
                               equ              (RCC_BASE + 0x38) ; RCC APB1 pe
                                                            ripheral reset regi
                                                            ster 1,            
                                                                               
                                                                 Address offset
                                                            : 0x38 */
  299 00000000 4002103C 
                       RCC_APB1RSTR2
                               equ              (RCC_BASE + 0x3C) ; RCC APB1 pe
                                                            ripheral reset regi
                                                            ster 2,            
                                                                               
                                                                 Address offset
                                                            : 0x3C */
  300 00000000 40021040 
                       RCC_APB2RSTR
                               equ              (RCC_BASE + 0x40) ; RCC APB2 pe
                                                            ripheral reset regi
                                                            ster,              
                                                                               
                                                                 Address offset
                                                            : 0x40 */
  301 00000000 40021048 
                       RCC_AHB1ENR
                               equ              (RCC_BASE + 0x48) ; RCC AHB1 pe
                                                            ripheral clocks ena
                                                            ble register,      
                                                                               
                                                                 Address offset
                                                            : 0x48 */
  302 00000000 4002104C 
                       RCC_AHB2ENR
                               equ              (RCC_BASE + 0x4C) ; RCC AHB2 pe
                                                            ripheral clocks ena
                                                            ble register,      
                                                                               
                                                                 Address offset
                                                            : 0x4C */
  303 00000000 40021050 
                       RCC_AHB3ENR
                               equ              (RCC_BASE + 0x50) ; RCC AHB3 pe
                                                            ripheral clocks ena
                                                            ble register,      
                                                                               
                                                                 Address offset
                                                            : 0x50 */
  304 00000000 40021058 
                       RCC_APB1ENR1
                               equ              (RCC_BASE + 0x58) ; RCC APB1 pe
                                                            ripheral clocks ena
                                                            ble register 1,    
                                                                               
                                                                 Address offset
                                                            : 0x58 */



ARM Macro Assembler    Page 16 


  305 00000000 4002105C 
                       RCC_APB1ENR2
                               equ              (RCC_BASE + 0x5C) ; RCC APB1 pe
                                                            ripheral clocks ena
                                                            ble register 2,    
                                                                               
                                                                 Address offset
                                                            : 0x5C */
  306 00000000 40021060 
                       RCC_APB2ENR
                               equ              (RCC_BASE + 0x60) ; RCC APB2 pe
                                                            ripheral clocks ena
                                                            ble register,      
                                                                               
                                                                 Address offset
                                                            : 0x60 */
  307 00000000 40021068 
                       RCC_AHB1SMENR
                               equ              (RCC_BASE + 0x68) ; RCC AHB1 pe
                                                            ripheral clocks ena
                                                            ble in sleep and st
                                                            op modes register, 
                                                                 Address offset
                                                            : 0x68 */
  308 00000000 4002106C 
                       RCC_AHB2SMENR
                               equ              (RCC_BASE + 0x6C) ; RCC AHB2 pe
                                                            ripheral clocks ena
                                                            ble in sleep and st
                                                            op modes register, 
                                                                 Address offset
                                                            : 0x6C */
  309 00000000 40021070 
                       RCC_AHB3SMENR
                               equ              (RCC_BASE + 0x70) ; RCC AHB3 pe
                                                            ripheral clocks ena
                                                            ble in sleep and st
                                                            op modes register, 
                                                                 Address offset
                                                            : 0x70 */
  310 00000000 40021078 
                       RCC_APB1SMENR1
                               equ              (RCC_BASE + 0x78) ; RCC APB1 pe
                                                            ripheral clocks ena
                                                            ble in sleep mode a
                                                            nd stop modes regis
                                                            ter 1, Address offs
                                                            et: 0x78 */
  311 00000000 4002107C 
                       RCC_APB1SMENR2
                               equ              (RCC_BASE + 0x7C) ; RCC APB1 pe
                                                            ripheral clocks ena
                                                            ble in sleep mode a
                                                            nd stop modes regis
                                                            ter 2, Address offs
                                                            et: 0x7C */
  312 00000000 40021080 
                       RCC_APB2SMENR
                               equ              (RCC_BASE + 0x80) ; RCC APB2 pe



ARM Macro Assembler    Page 17 


                                                            ripheral clocks ena
                                                            ble in sleep mode a
                                                            nd stop modes regis
                                                            ter, Address offset
                                                            : 0x80 */
  313 00000000 40021088 
                       RCC_CCIPR
                               equ              (RCC_BASE + 0x88) ; RCC periphe
                                                            rals independent cl
                                                            ock configuration r
                                                            egister,           
                                                                 Address offset
                                                            : 0x88 */
  314 00000000 40021090 
                       RCC_BDCR
                               equ              (RCC_BASE + 0x90) ; RCC backup 
                                                            domain control regi
                                                            ster,              
                                                                               
                                                                 Address offset
                                                            : 0x90 */
  315 00000000 40021094 
                       RCC_CSR equ              (RCC_BASE + 0x94) ; RCC clock c
                                                            ontrol & status reg
                                                            ister,             
                                                                               
                                                                 Address offset
                                                            : 0x94 */
  316 00000000 40021098 
                       RCC_CRRCR
                               equ              (RCC_BASE + 0x98) ; RCC clock r
                                                            ecovery RC register
                                                            ,                  
                                                                               
                                                                 Address offset
                                                            : 0x98 */
  317 00000000 4002109C 
                       RCC_CCIPR2
                               equ              (RCC_BASE + 0x9C) ; RCC periphe
                                                            rals independent cl
                                                            ock configuration r
                                                            egister 2,         
                                                                 Address offset
                                                            : 0x9C */
  318 00000000         
  319 00000000         
  320 00000000         
  321 00000000         
  322 00000000         ;FMAC                ((FMAC_TypeDef *) FMAC_BASE)
  323 00000000         ;FLASH               ((FLASH_TypeDef *) FLASH_R_BASE)
  324 00000000         ;CRC                 ((CRC_TypeDef *) CRC_BASE)
  325 00000000         
  326 00000000         ;##############################
  327 00000000         ; GPIOA
  328 00000000 48000000 
                       GPIOA_MODER
                               equ              (GPIOA_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address



ARM Macro Assembler    Page 18 


                                                             offset: 0x00      
                                                            */
  329 00000000 48000004 
                       GPIOA_OTYPER
                               equ              (GPIOA_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address
                                                             offset: 0x04      
                                                            */
  330 00000000 48000008 
                       GPIOA_OSPEEDR
                               equ              (GPIOA_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  331 00000000 4800000C 
                       GPIOA_PUPDR
                               equ              (GPIOA_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      
                                                            */
  332 00000000 48000010 
                       GPIOA_IDR
                               equ              (GPIOA_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  333 00000000 48000014 
                       GPIOA_ODR
                               equ              (GPIOA_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  334 00000000 48000018 
                       GPIOA_BSRR
                               equ              (GPIOA_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re
                                                            gister,     Address
                                                             offset: 0x18      
                                                            */
  335 00000000 4800001C 
                       GPIOA_LCKR
                               equ              (GPIOA_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  336 00000000 48000020 
                       GPIOA_AFR0
                               equ              (GPIOA_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  337 00000000 48000024 



ARM Macro Assembler    Page 19 


                       GPIOA_AFR1
                               equ              (GPIOA_BASE + 0x24) ; 
  338 00000000 48000028 
                       GPIOA_BRR
                               equ              (GPIOA_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address
                                                             offset: 0x28      
                                                            */
  339 00000000         
  340 00000000         
  341 00000000         ;##############################
  342 00000000         ; GPIOB
  343 00000000 48000400 
                       GPIOB_MODER
                               equ              (GPIOB_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address
                                                             offset: 0x00      
                                                            */
  344 00000000 48000404 
                       GPIOB_OTYPER
                               equ              (GPIOB_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address
                                                             offset: 0x04      
                                                            */
  345 00000000 48000408 
                       GPIOB_OSPEEDR
                               equ              (GPIOB_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  346 00000000 4800040C 
                       GPIOB_PUPDR
                               equ              (GPIOB_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      
                                                            */
  347 00000000 48000410 
                       GPIOB_IDR
                               equ              (GPIOB_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  348 00000000 48000414 
                       GPIOB_ODR
                               equ              (GPIOB_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  349 00000000 48000418 
                       GPIOB_BSRR
                               equ              (GPIOB_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re



ARM Macro Assembler    Page 20 


                                                            gister,     Address
                                                             offset: 0x18      
                                                            */
  350 00000000 4800041C 
                       GPIOB_LCKR
                               equ              (GPIOB_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  351 00000000 48000420 
                       GPIOB_AFR0
                               equ              (GPIOB_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  352 00000000 48000424 
                       GPIOB_AFR1
                               equ              (GPIOB_BASE + 0x24) ; 
  353 00000000 48000428 
                       GPIOB_BRR
                               equ              (GPIOB_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address
                                                             offset: 0x28      
                                                            */
  354 00000000         
  355 00000000         
  356 00000000         
  357 00000000         ;##############################
  358 00000000         ; GPIOC
  359 00000000 48000800 
                       GPIOC_MODER
                               equ              (GPIOC_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address
                                                             offset: 0x00      
                                                            */
  360 00000000 48000804 
                       GPIOC_OTYPER
                               equ              (GPIOC_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address
                                                             offset: 0x04      
                                                            */
  361 00000000 48000808 
                       GPIOC_OSPEEDR
                               equ              (GPIOC_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  362 00000000 4800080C 
                       GPIOC_PUPDR
                               equ              (GPIOC_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      



ARM Macro Assembler    Page 21 


                                                            */
  363 00000000 48000810 
                       GPIOC_IDR
                               equ              (GPIOC_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  364 00000000 48000814 
                       GPIOC_ODR
                               equ              (GPIOC_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  365 00000000 48000818 
                       GPIOC_BSRR
                               equ              (GPIOC_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re
                                                            gister,     Address
                                                             offset: 0x18      
                                                            */
  366 00000000 4800081C 
                       GPIOC_LCKR
                               equ              (GPIOC_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  367 00000000 48000820 
                       GPIOC_AFR0
                               equ              (GPIOC_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  368 00000000 48000824 
                       GPIOC_AFR1
                               equ              (GPIOC_BASE + 0x24) ; 
  369 00000000 48000828 
                       GPIOC_BRR
                               equ              (GPIOC_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address
                                                             offset: 0x28      
                                                            */
  370 00000000         
  371 00000000         
  372 00000000         ;##############################
  373 00000000         ; GPIOD
  374 00000000 48000C00 
                       GPIOD_MODER
                               equ              (GPIOD_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address
                                                             offset: 0x00      
                                                            */
  375 00000000 48000C04 
                       GPIOD_OTYPER



ARM Macro Assembler    Page 22 


                               equ              (GPIOD_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address
                                                             offset: 0x04      
                                                            */
  376 00000000 48000C08 
                       GPIOD_OSPEEDR
                               equ              (GPIOD_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  377 00000000 48000C0C 
                       GPIOD_PUPDR
                               equ              (GPIOD_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      
                                                            */
  378 00000000 48000C10 
                       GPIOD_IDR
                               equ              (GPIOD_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  379 00000000 48000C14 
                       GPIOD_ODR
                               equ              (GPIOD_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  380 00000000 48000C18 
                       GPIOD_BSRR
                               equ              (GPIOD_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re
                                                            gister,     Address
                                                             offset: 0x18      
                                                            */
  381 00000000 48000C1C 
                       GPIOD_LCKR
                               equ              (GPIOD_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  382 00000000 48000C20 
                       GPIOD_AFR0
                               equ              (GPIOD_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  383 00000000 48000C24 
                       GPIOD_AFR1
                               equ              (GPIOD_BASE + 0x24) ; 
  384 00000000 48000C28 
                       GPIOD_BRR



ARM Macro Assembler    Page 23 


                               equ              (GPIOD_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address
                                                             offset: 0x28      
                                                            */
  385 00000000         
  386 00000000         
  387 00000000         
  388 00000000         ;##############################
  389 00000000         ; GPIOE
  390 00000000 48001000 
                       GPIOE_MODER
                               equ              (GPIOE_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address
                                                             offset: 0x00      
                                                            */
  391 00000000 48001004 
                       GPIOE_OTYPER
                               equ              (GPIOE_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address
                                                             offset: 0x04      
                                                            */
  392 00000000 48001008 
                       GPIOE_OSPEEDR
                               equ              (GPIOE_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  393 00000000 4800100C 
                       GPIOE_PUPDR
                               equ              (GPIOE_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      
                                                            */
  394 00000000 48001010 
                       GPIOE_IDR
                               equ              (GPIOE_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  395 00000000 48001014 
                       GPIOE_ODR
                               equ              (GPIOE_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  396 00000000 48001018 
                       GPIOE_BSRR
                               equ              (GPIOE_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re
                                                            gister,     Address
                                                             offset: 0x18      
                                                            */



ARM Macro Assembler    Page 24 


  397 00000000 4800101C 
                       GPIOE_LCKR
                               equ              (GPIOE_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  398 00000000 48001020 
                       GPIOE_AFR0
                               equ              (GPIOE_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  399 00000000 48001024 
                       GPIOE_AFR1
                               equ              (GPIOE_BASE + 0x24) ; 
  400 00000000 48001028 
                       GPIOE_BRR
                               equ              (GPIOE_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address
                                                             offset: 0x28      
                                                            */
  401 00000000         
  402 00000000         
  403 00000000         
  404 00000000         ;##############################
  405 00000000         ; GPIOF
  406 00000000 48001400 
                       GPIOF_MODER
                               equ              (GPIOF_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address
                                                             offset: 0x00      
                                                            */
  407 00000000 48001404 
                       GPIOF_OTYPER
                               equ              (GPIOF_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address
                                                             offset: 0x04      
                                                            */
  408 00000000 48001408 
                       GPIOF_OSPEEDR
                               equ              (GPIOF_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  409 00000000 4800140C 
                       GPIOF_PUPDR
                               equ              (GPIOF_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      
                                                            */
  410 00000000 48001410 
                       GPIOF_IDR



ARM Macro Assembler    Page 25 


                               equ              (GPIOF_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  411 00000000 48001414 
                       GPIOF_ODR
                               equ              (GPIOF_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  412 00000000 48001418 
                       GPIOF_BSRR
                               equ              (GPIOF_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re
                                                            gister,     Address
                                                             offset: 0x18      
                                                            */
  413 00000000 4800141C 
                       GPIOF_LCKR
                               equ              (GPIOF_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  414 00000000 48001420 
                       GPIOF_AFR0
                               equ              (GPIOF_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  415 00000000 48001424 
                       GPIOF_AFR1
                               equ              (GPIOF_BASE + 0x24) ; 
  416 00000000 48001428 
                       GPIOF_BRR
                               equ              (GPIOF_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address
                                                             offset: 0x28      
                                                            */
  417 00000000         
  418 00000000         
  419 00000000         ;##############################
  420 00000000         ; GPIOG
  421 00000000 48001800 
                       GPIOG_MODER
                               equ              (GPIOG_BASE + 0x00) ;  GPIO por
                                                            t mode register,   
                                                                        Address
                                                             offset: 0x00      
                                                            */
  422 00000000 48001804 
                       GPIOG_OTYPER
                               equ              (GPIOG_BASE + 0x04) ;  GPIO por
                                                            t output type regis
                                                            ter,        Address



ARM Macro Assembler    Page 26 


                                                             offset: 0x04      
                                                            */
  423 00000000 48001808 
                       GPIOG_OSPEEDR
                               equ              (GPIOG_BASE + 0x08) ;  GPIO por
                                                            t output speed regi
                                                            ster,       Address
                                                             offset: 0x08      
                                                            */
  424 00000000 4800180C 
                       GPIOG_PUPDR
                               equ              (GPIOG_BASE + 0x0C) ;  GPIO por
                                                            t pull-up/pull-down
                                                             register,  Address
                                                             offset: 0x0C      
                                                            */
  425 00000000 48001810 
                       GPIOG_IDR
                               equ              (GPIOG_BASE + 0x10) ;  GPIO por
                                                            t input data regist
                                                            er,         Address
                                                             offset: 0x10      
                                                            */
  426 00000000 48001814 
                       GPIOG_ODR
                               equ              (GPIOG_BASE + 0x14) ;  GPIO por
                                                            t output data regis
                                                            ter,        Address
                                                             offset: 0x14      
                                                            */
  427 00000000 48001818 
                       GPIOG_BSRR
                               equ              (GPIOG_BASE + 0x18) ;  GPIO por
                                                            t bit set/reset  re
                                                            gister,     Address
                                                             offset: 0x18      
                                                            */
  428 00000000 4800181C 
                       GPIOG_LCKR
                               equ              (GPIOG_BASE + 0x1C) ;  GPIO por
                                                            t configuration loc
                                                            k register, Address
                                                             offset: 0x1C      
                                                            */
  429 00000000 48001820 
                       GPIOG_AFR0
                               equ              (GPIOG_BASE + 0x20) ;  GPIO alt
                                                            ernate function reg
                                                            isters,     Address
                                                             offset: 0x20-0x24 
                                                            */
  430 00000000 48001824 
                       GPIOG_AFR1
                               equ              (GPIOG_BASE + 0x24) ; 
  431 00000000 48001828 
                       GPIOG_BRR
                               equ              (GPIOG_BASE + 0x28) ;  GPIO Bit
                                                             Reset register,   
                                                                        Address



ARM Macro Assembler    Page 27 


                                                             offset: 0x28      
                                                            */
  432 00000000         
  433 00000000         
  434 00000000         
  435 00000000         ;##############################
  436 00000000         ; System configuration controller
  437 00000000 40010000 
                       SYSCFG_MEMRMP
                               equ              (SYSCFG_BASE + 0x00) ; SYSCFG m
                                                            emory remap registe
                                                            r,                 
                                                                   Address offs
                                                            et: 0x00      */
  438 00000000 40010004 
                       SYSCFG_CFGR1
                               equ              (SYSCFG_BASE + 0x04) ; SYSCFG c
                                                            onfiguration regist
                                                            er 1,              
                                                                   Address offs
                                                            et: 0x04      */
  439 00000000 40010008 
                       SYSCFG_EXTICR1
                               equ              (SYSCFG_BASE + 0x08)
  440 00000000 4001000C 
                       SYSCFG_EXTICR2
                               equ              (SYSCFG_BASE + 0x0C)
  441 00000000 40010010 
                       SYSCFG_EXTICR3
                               equ              (SYSCFG_BASE + 0x10)
  442 00000000 40010014 
                       SYSCFG_EXTICR4
                               equ              (SYSCFG_BASE + 0x14)
  443 00000000 40010018 
                       SYSCFG_SCSR
                               equ              (SYSCFG_BASE + 0x18) ; SYSCFG C
                                                            CMSRAM control and 
                                                            status register,   
                                                                   Address offs
                                                            et: 0x18      */
  444 00000000 4001001C 
                       SYSCFG_CFGR2
                               equ              (SYSCFG_BASE + 0x1C) ; SYSCFG c
                                                            onfiguration regist
                                                            er 2,              
                                                                   Address offs
                                                            et: 0x1C      */
  445 00000000 40010020 
                       SYSCFG_SWPR
                               equ              (SYSCFG_BASE + 0x20) ; SYSCFG C
                                                            CMSRAM write protec
                                                            tion register,     
                                                                   Address offs
                                                            et: 0x20      */
  446 00000000 40010024 
                       SYSCFG_SKR
                               equ              (SYSCFG_BASE + 0x24) ; SYSCFG C
                                                            CMSRAM Key Register
                                                            ,                  



ARM Macro Assembler    Page 28 


                                                                   Address offs
                                                            et: 0x24      */
  447 00000000         
  448 00000000         
  449 00000000         ;##############################
  450 00000000         ; External Interrupt/Event Controller
  451 00000000 40010400 
                       EXTI_IMR1
                               equ              (EXTI_BASE + 0x00) ;  EXTI Inte
                                                            rrupt mask register
                                                             1,             Add
                                                            ress offset: 0x00 *
                                                            /
  452 00000000 40010404 
                       EXTI_EMR1
                               equ              (EXTI_BASE + 0x04) ;  EXTI Even
                                                            t mask register 1, 
                                                                            Add
                                                            ress offset: 0x04 *
                                                            /
  453 00000000 40010408 
                       EXTI_RTSR1
                               equ              (EXTI_BASE + 0x08) ;  EXTI Risi
                                                            ng trigger selectio
                                                            n register 1,   Add
                                                            ress offset: 0x08 *
                                                            /
  454 00000000 4001040C 
                       EXTI_FTSR1
                               equ              (EXTI_BASE + 0x0C) ;  EXTI Fall
                                                            ing trigger selecti
                                                            on register 1,  Add
                                                            ress offset: 0x0C *
                                                            /
  455 00000000 40010410 
                       EXTI_SWIER1
                               equ              (EXTI_BASE + 0x10) ;  EXTI Soft
                                                            ware interrupt even
                                                            t register 1,   Add
                                                            ress offset: 0x10 *
                                                            /
  456 00000000 40010414 
                       EXTI_PR1
                               equ              (EXTI_BASE + 0x14) ;  EXTI Pend
                                                            ing register 1,    
                                                                            Add
                                                            ress offset: 0x14 *
                                                            /
  457 00000000 40010420 
                       EXTI_IMR2
                               equ              (EXTI_BASE + 0x20) ;  EXTI Inte
                                                            rrupt mask register
                                                             2,             Add
                                                            ress offset: 0x20 *
                                                            /
  458 00000000 40010424 
                       EXTI_EMR2
                               equ              (EXTI_BASE + 0x24) ;  EXTI Even
                                                            t mask register 2, 



ARM Macro Assembler    Page 29 


                                                                            Add
                                                            ress offset: 0x24 *
                                                            /
  459 00000000 40010428 
                       EXTI_RTSR2
                               equ              (EXTI_BASE + 0x28) ;  EXTI Risi
                                                            ng trigger selectio
                                                            n register 2,   Add
                                                            ress offset: 0x28 *
                                                            /
  460 00000000 4001042C 
                       EXTI_FTSR2
                               equ              (EXTI_BASE + 0x2C) ;  EXTI Fall
                                                            ing trigger selecti
                                                            on register 2,  Add
                                                            ress offset: 0x2C *
                                                            /
  461 00000000 40010430 
                       EXTI_SWIER2
                               equ              (EXTI_BASE + 0x30) ;  EXTI Soft
                                                            ware interrupt even
                                                            t register 2,   Add
                                                            ress offset: 0x30 *
                                                            /
  462 00000000 40010434 
                       EXTI_PR2
                               equ              (EXTI_BASE + 0x34) ;  EXTI Pend
                                                            ing register 2,    
                                                                            Add
                                                            ress offset: 0x34 *
                                                            /
  463 00000000         
  464 00000000         
  465 00000000         
  466 00000000         ;ADC1                ((ADC_TypeDef *) ADC1_BASE)
  467 00000000         ;ADC2                ((ADC_TypeDef *) ADC2_BASE)
  468 00000000         ;ADC12_COMMON        ((ADC_Common_TypeDef *) ADC12_COMMO
                       N_BASE)
  469 00000000         ;ADC3                ((ADC_TypeDef *) ADC3_BASE)
  470 00000000         ;ADC4                ((ADC_TypeDef *) ADC4_BASE)
  471 00000000         ;ADC5                ((ADC_TypeDef *) ADC5_BASE)
  472 00000000         ;ADC345_COMMON       ((ADC_Common_TypeDef *) ADC345_COMM
                       ON_BASE)
  473 00000000         ;DAC                 ((DAC_TypeDef *) DAC_BASE)
  474 00000000         ;DAC1                ((DAC_TypeDef *) DAC1_BASE)
  475 00000000         ;DAC2                ((DAC_TypeDef *) DAC2_BASE)
  476 00000000         ;DAC3                ((DAC_TypeDef *) DAC3_BASE)
  477 00000000         ;DAC4                ((DAC_TypeDef *) DAC4_BASE)
  478 00000000         ;RNG                 ((RNG_TypeDef *) RNG_BASE)
  479 00000000         
  480 00000000         ;DMA1_Channel1       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el1_BASE)
  481 00000000         ;DMA1_Channel2       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el2_BASE)
  482 00000000         ;DMA1_Channel3       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el3_BASE)
  483 00000000         ;DMA1_Channel4       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el4_BASE)
  484 00000000         ;DMA1_Channel5       ((DMA_Channel_TypeDef *) DMA1_Chann



ARM Macro Assembler    Page 30 


                       el5_BASE)
  485 00000000         ;DMA1_Channel6       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el6_BASE)
  486 00000000         ;DMA1_Channel7       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el7_BASE)
  487 00000000         ;DMA1_Channel8       ((DMA_Channel_TypeDef *) DMA1_Chann
                       el8_BASE)
  488 00000000         
  489 00000000         ;DMA2_Channel1       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el1_BASE)
  490 00000000         ;DMA2_Channel2       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el2_BASE)
  491 00000000         ;DMA2_Channel3       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el3_BASE)
  492 00000000         ;DMA2_Channel4       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el4_BASE)
  493 00000000         ;DMA2_Channel5       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el5_BASE)
  494 00000000         ;DMA2_Channel6       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el6_BASE)
  495 00000000         ;DMA2_Channel7       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el7_BASE)
  496 00000000         ;DMA2_Channel8       ((DMA_Channel_TypeDef *) DMA2_Chann
                       el8_BASE)
  497 00000000         
  498 00000000         ;DMAMUX1_Channel0    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel0_BASE)
  499 00000000         ;DMAMUX1_Channel1    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel1_BASE)
  500 00000000         ;DMAMUX1_Channel2    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel2_BASE)
  501 00000000         ;DMAMUX1_Channel3    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel3_BASE)
  502 00000000         ;DMAMUX1_Channel4    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel4_BASE)
  503 00000000         ;DMAMUX1_Channel5    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel5_BASE)
  504 00000000         ;DMAMUX1_Channel6    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel6_BASE)
  505 00000000         ;DMAMUX1_Channel7    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel7_BASE)
  506 00000000         ;DMAMUX1_Channel8    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel8_BASE)
  507 00000000         ;DMAMUX1_Channel9    ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel9_BASE)
  508 00000000         ;DMAMUX1_Channel10   ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel10_BASE)
  509 00000000         ;DMAMUX1_Channel11   ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel11_BASE)
  510 00000000         ;DMAMUX1_Channel12   ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel12_BASE)
  511 00000000         ;DMAMUX1_Channel13   ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel13_BASE)
  512 00000000         ;DMAMUX1_Channel14   ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel14_BASE)
  513 00000000         ;DMAMUX1_Channel15   ((DMAMUX_Channel_TypeDef *) DMAMUX1
                       _Channel15_BASE)
  514 00000000         
  515 00000000         ;DMAMUX1_RequestGenerator0  ((DMAMUX_RequestGen_TypeDef 



ARM Macro Assembler    Page 31 


                       *) DMAMUX1_RequestGenerator0_BASE)
  516 00000000         ;DMAMUX1_RequestGenerator1  ((DMAMUX_RequestGen_TypeDef 
                       *) DMAMUX1_RequestGenerator1_BASE)
  517 00000000         ;DMAMUX1_RequestGenerator2  ((DMAMUX_RequestGen_TypeDef 
                       *) DMAMUX1_RequestGenerator2_BASE)
  518 00000000         ;DMAMUX1_RequestGenerator3  ((DMAMUX_RequestGen_TypeDef 
                       *) DMAMUX1_RequestGenerator3_BASE)
  519 00000000         
  520 00000000         ;DMAMUX1_ChannelStatus      ((DMAMUX_ChannelStatus_TypeD
                       ef *) DMAMUX1_ChannelStatus_BASE)
  521 00000000         ;DMAMUX1_RequestGenStatus   ((DMAMUX_RequestGenStatus_Ty
                       peDef *) DMAMUX1_RequestGenStatus_BASE)
  522 00000000         
  523 00000000         ;FMC_Bank1_R         ((FMC_Bank1_TypeDef *) FMC_Bank1_R_
                       BASE)
  524 00000000         ;FMC_Bank1E_R        ((FMC_Bank1E_TypeDef *) FMC_Bank1E_
                       R_BASE)
  525 00000000         ;FMC_Bank3_R         ((FMC_Bank3_TypeDef *) FMC_Bank3_R_
                       BASE)
  526 00000000         
  527 00000000         ;QUADSPI             ((QUADSPI_TypeDef *) QSPI_R_BASE)
  528 00000000         
  529 00000000         ;DBGMCU              ((DBGMCU_TypeDef *) DBGMCU_BASE)
  530 00000000         
  531 00000000         
  532 00000000         
  533 00000000         ;##############################
  534 00000000         ; TIMER6
  535 00000000 40001000 
                       TIM6_CR1
                               equ              (TIM6_BASE + 0x00) ; TIM contro
                                                            l register 1,      
                                                                         Addres
                                                            s offset: 0x00 */
  536 00000000 40001004 
                       TIM6_CR2
                               equ              (TIM6_BASE + 0x04) ; TIM contro
                                                            l register 2,      
                                                                         Addres
                                                            s offset: 0x04 */
  537 00000000 4000100C 
                       TIM6_DIER
                               equ              (TIM6_BASE + 0x0C) ; TIM DMA/in
                                                            terrupt enable regi
                                                            ster,        Addres
                                                            s offset: 0x0C */
  538 00000000 40001010 
                       TIM6_SR equ              (TIM6_BASE + 0x10) ; TIM status
                                                             register,         
                                                                         Addres
                                                            s offset: 0x10 */
  539 00000000 40001014 
                       TIM6_EGR
                               equ              (TIM6_BASE + 0x14) ; TIM event 
                                                            generation register
                                                            ,            Addres
                                                            s offset: 0x14 */
  540 00000000 40001024 
                       TIM6_CNT



ARM Macro Assembler    Page 32 


                               equ              (TIM6_BASE + 0x24) ; TIM counte
                                                            r register,        
                                                                         Addres
                                                            s offset: 0x24 */
  541 00000000 40001028 
                       TIM6_PSC
                               equ              (TIM6_BASE + 0x28) ; TIM presca
                                                            ler,               
                                                                         Addres
                                                            s offset: 0x28 */
  542 00000000 4000102C 
                       TIM6_ARR
                               equ              (TIM6_BASE + 0x2C) ; TIM auto-r
                                                            eload register,    
                                                                         Addres
                                                            s offset: 0x2C */
  543 00000000         
  544 00000000         ;##############################
  545 00000000         ; TIMER7
  546 00000000 40001400 
                       TIM7_CR1
                               equ              (TIM7_BASE + 0x00) ; TIM contro
                                                            l register 1,      
                                                                         Addres
                                                            s offset: 0x00 */
  547 00000000 40001404 
                       TIM7_CR2
                               equ              (TIM7_BASE + 0x04) ; TIM contro
                                                            l register 2,      
                                                                         Addres
                                                            s offset: 0x04 */
  548 00000000 4000140C 
                       TIM7_DIER
                               equ              (TIM7_BASE + 0x0C) ; TIM DMA/in
                                                            terrupt enable regi
                                                            ster,        Addres
                                                            s offset: 0x0C */
  549 00000000 40001410 
                       TIM7_SR equ              (TIM7_BASE + 0x10) ; TIM status
                                                             register,         
                                                                         Addres
                                                            s offset: 0x10 */
  550 00000000 40001414 
                       TIM7_EGR
                               equ              (TIM7_BASE + 0x14) ; TIM event 
                                                            generation register
                                                            ,            Addres
                                                            s offset: 0x14 */
  551 00000000 40001424 
                       TIM7_CNT
                               equ              (TIM7_BASE + 0x24) ; TIM counte
                                                            r register,        
                                                                         Addres
                                                            s offset: 0x24 */
  552 00000000 40001428 
                       TIM7_PSC
                               equ              (TIM7_BASE + 0x28) ; TIM presca
                                                            ler,               
                                                                         Addres



ARM Macro Assembler    Page 33 


                                                            s offset: 0x28 */
  553 00000000 4000142C 
                       TIM7_ARR
                               equ              (TIM7_BASE + 0x2C) ; TIM auto-r
                                                            eload register,    
                                                                         Addres
                                                            s offset: 0x2C */
  554 00000000         
  555 00000000         
  556 00000000         ;##############################
  557 00000000         ; UART1
  558 00000000 40013800 
                       USART1_CR1
                               equ              (USART1_BASE + 0x00 )
  559 00000000 40013804 
                       USART1_CR2
                               equ              (USART1_BASE + 0x04 )
  560 00000000 40013808 
                       USART1_CR3
                               equ              (USART1_BASE + 0x08 )
  561 00000000 4001380C 
                       USART1_BRR
                               equ              (USART1_BASE + 0x0C )
  562 00000000 40013810 
                       USART1_GTPR
                               equ              (USART1_BASE + 0x10 )
  563 00000000 40013814 
                       USART1_RTOR
                               equ              (USART1_BASE + 0x14 )
  564 00000000 40013818 
                       USART1_RQR
                               equ              (USART1_BASE + 0x18 )
  565 00000000 4001381C 
                       USART1_ISR
                               equ              (USART1_BASE + 0x1C )
  566 00000000 40013820 
                       USART1_ICR
                               equ              (USART1_BASE + 0x20 )
  567 00000000 40013824 
                       USART1_RDR
                               equ              (USART1_BASE + 0x24 )
  568 00000000 40013828 
                       USART1_TDR
                               equ              (USART1_BASE + 0x28 )
  569 00000000 4001382C 
                       USART1_PRESC
                               equ              (USART1_BASE + 0x2C )
  570 00000000         
  571 00000000         ;##############################
  572 00000000         ; UART3
  573 00000000 40004800 
                       USART3_CR1
                               equ              (USART3_BASE + 0x00 )
  574 00000000 40004804 
                       USART3_CR2
                               equ              (USART3_BASE + 0x04 )
  575 00000000 40004808 
                       USART3_CR3
                               equ              (USART3_BASE + 0x08 )



ARM Macro Assembler    Page 34 


  576 00000000 4000480C 
                       USART3_BRR
                               equ              (USART3_BASE + 0x0C )
  577 00000000 40004810 
                       USART3_GTPR
                               equ              (USART3_BASE + 0x10 )
  578 00000000 40004814 
                       USART3_RTOR
                               equ              (USART3_BASE + 0x14 )
  579 00000000 40004818 
                       USART3_RQR
                               equ              (USART3_BASE + 0x18 )
  580 00000000 4000481C 
                       USART3_ISR
                               equ              (USART3_BASE + 0x1C )
  581 00000000 40004820 
                       USART3_ICR
                               equ              (USART3_BASE + 0x20 )
  582 00000000 40004824 
                       USART3_RDR
                               equ              (USART3_BASE + 0x24 )
  583 00000000 40004828 
                       USART3_TDR
                               equ              (USART3_BASE + 0x28 )
  584 00000000 4000482C 
                       USART3_PRESC
                               equ              (USART3_BASE + 0x2C )
  585 00000000         
  586 00000000         
  587 00000000         ;##############################
  588 00000000         ; FMC_Bank1_R          ((FMC_Bank1_TypeDef *) FMC_Bank1_
                       R_BASE)
  589 00000000 A0000000 
                       FMC_BCR1
                               equ              (FMC_Bank1_R_BASE + 0x00) ;   N
                                                            OR/PSRAM chip-selec
                                                            t control register(
                                                            BCR) and chip-selec
                                                            t timing register(B
                                                            TR), Address offset
                                                            : 0x00-1C */
  590 00000000 A0000008 
                       FMC_BCR2
                               equ              (FMC_Bank1_R_BASE + 0x08)
  591 00000000 A0000010 
                       FMC_BCR3
                               equ              (FMC_Bank1_R_BASE + 0x10)
  592 00000000 A0000018 
                       FMC_BCR4
                               equ              (FMC_Bank1_R_BASE + 0x18)
  593 00000000 A0000004 
                       FMC_BTR1
                               equ              (FMC_Bank1_R_BASE + 0x04)
  594 00000000 A000000C 
                       FMC_BTR2
                               equ              (FMC_Bank1_R_BASE + 0x0C)
  595 00000000 A0000014 
                       FMC_BTR3
                               equ              (FMC_Bank1_R_BASE + 0x14)



ARM Macro Assembler    Page 35 


  596 00000000 A000001C 
                       FMC_BTR4
                               equ              (FMC_Bank1_R_BASE + 0x1C)
  597 00000000 A0000020 
                       FMC_PCSCNTR
                               equ              (FMC_Bank1_R_BASE + 0x20) ; PSR
                                                            AM chip-select coun
                                                            ter register, Addre
                                                            ss offset:    0x20 
                                                            */
  598 00000000         ;FMC_Bank1E_R        ((FMC_Bank1E_TypeDef *) FMC_Bank1E_
                       R_BASE)
  599 00000000 A0000208 
                       FMC_BWTR1
                               equ              (FMC_Bank1E_R_BASE + 0x104) ; N
                                                            OR/PSRAM write timi
                                                            ng registers, Addre
                                                            ss offset: 0x104-0x
                                                            11C */
  600 00000000 A0000210 
                       FMC_BWTR2
                               equ              (FMC_Bank1E_R_BASE + 0x10C)
  601 00000000 A0000218 
                       FMC_BWTR3
                               equ              (FMC_Bank1E_R_BASE + 0x114)
  602 00000000 A0000220 
                       FMC_BWTR4
                               equ              (FMC_Bank1E_R_BASE + 0x11C)
  603 00000000         
  604 00000000         
  605 00000000         ;##############################
  606 00000000         ; NVIC
  607 00000000 E000E100 
                       NVIC_ISER0
                               equ              (NVIC_BASE + 0x00) ;Offset: 0x0
                                                            00 (R/W)  Interrupt
                                                             Set Enable Registe
                                                            r           */
  608 00000000 E000E104 
                       NVIC_ISER1
                               equ              (NVIC_BASE + 0x04)
  609 00000000 E000E108 
                       NVIC_ISER2
                               equ              (NVIC_BASE + 0x08)
  610 00000000 E000E10C 
                       NVIC_ISER3
                               equ              (NVIC_BASE + 0x0C)
  611 00000000 E000E110 
                       NVIC_ISER4
                               equ              (NVIC_BASE + 0x10)
  612 00000000 E000E114 
                       NVIC_ISER5
                               equ              (NVIC_BASE + 0x14)
  613 00000000 E000E118 
                       NVIC_ISER6
                               equ              (NVIC_BASE + 0x18)
  614 00000000 E000E11C 
                       NVIC_ISER7
                               equ              (NVIC_BASE + 0x1C)



ARM Macro Assembler    Page 36 


  615 00000000         
  616 00000000         
  617 00000000 E000E180 
                       NVIC_ICER0
                               equ              (NVIC_BASE + 0x80) ; Offset: 0x
                                                            080 (R/W)  Interrup
                                                            t Clear Enable Regi
                                                            ster         */
  618 00000000 E000E184 
                       NVIC_ICER1
                               equ              (NVIC_BASE + 0x84)
  619 00000000 E000E188 
                       NVIC_ICER2
                               equ              (NVIC_BASE + 0x88)
  620 00000000 E000E18C 
                       NVIC_ICER3
                               equ              (NVIC_BASE + 0x8C)
  621 00000000 E000E190 
                       NVIC_ICER4
                               equ              (NVIC_BASE + 0x90)
  622 00000000 E000E194 
                       NVIC_ICER5
                               equ              (NVIC_BASE + 0x94)
  623 00000000 E000E198 
                       NVIC_ICER6
                               equ              (NVIC_BASE + 0x98)
  624 00000000 E000E19C 
                       NVIC_ICER7
                               equ              (NVIC_BASE + 0x9C)
  625 00000000         
  626 00000000 E000E200 
                       NVIC_ISPR0
                               equ              (NVIC_BASE + 0x100) ; Offset: 0
                                                            x100 (R/W)  Interru
                                                            pt Set Pending Regi
                                                            ster          */
  627 00000000 E000E204 
                       NVIC_ISPR1
                               equ              (NVIC_BASE + 0x104)
  628 00000000 E000E208 
                       NVIC_ISPR2
                               equ              (NVIC_BASE + 0x108)
  629 00000000 E000E20C 
                       NVIC_ISPR3
                               equ              (NVIC_BASE + 0x10C)
  630 00000000 E000E210 
                       NVIC_ISPR4
                               equ              (NVIC_BASE + 0x110)
  631 00000000 E000E214 
                       NVIC_ISPR5
                               equ              (NVIC_BASE + 0x114)
  632 00000000 E000E218 
                       NVIC_ISPR6
                               equ              (NVIC_BASE + 0x118)
  633 00000000 E000E21C 
                       NVIC_ISPR7
                               equ              (NVIC_BASE + 0x11C)
  634 00000000         
  635 00000000 E000E280 



ARM Macro Assembler    Page 37 


                       NVIC_ICPR0
                               equ              (NVIC_BASE + 0x180) ; Offset: 0
                                                            x180 (R/W)  Interru
                                                            pt Clear Pending Re
                                                            gister        */
  636 00000000 E000E284 
                       NVIC_ICPR1
                               equ              (NVIC_BASE + 0x184)
  637 00000000 E000E288 
                       NVIC_ICPR2
                               equ              (NVIC_BASE + 0x188)
  638 00000000 E000E28C 
                       NVIC_ICPR3
                               equ              (NVIC_BASE + 0x18C)
  639 00000000 E000E290 
                       NVIC_ICPR4
                               equ              (NVIC_BASE + 0x190)
  640 00000000 E000E294 
                       NVIC_ICPR5
                               equ              (NVIC_BASE + 0x194)
  641 00000000 E000E298 
                       NVIC_ICPR6
                               equ              (NVIC_BASE + 0x198)
  642 00000000 E000E29C 
                       NVIC_ICPR7
                               equ              (NVIC_BASE + 0x19C)
  643 00000000         
  644 00000000         
  645 00000000 E000E300 
                       NVIC_IABR0
                               equ              (NVIC_BASE + 0x200) ; Offset: 0
                                                            x200 (R/W)  Interru
                                                            pt Active bit Regis
                                                            ter           */
  646 00000000 E000E304 
                       NVIC_IABR1
                               equ              (NVIC_BASE + 0x204)
  647 00000000 E000E308 
                       NVIC_IABR2
                               equ              (NVIC_BASE + 0x208)
  648 00000000 E000E30C 
                       NVIC_IABR3
                               equ              (NVIC_BASE + 0x20C)
  649 00000000 E000E310 
                       NVIC_IABR4
                               equ              (NVIC_BASE + 0x210)
  650 00000000 E000E314 
                       NVIC_IABR5
                               equ              (NVIC_BASE + 0x214)
  651 00000000 E000E318 
                       NVIC_IABR6
                               equ              (NVIC_BASE + 0x218)
  652 00000000 E000E31C 
                       NVIC_IABR7
                               equ              (NVIC_BASE + 0x21C)
  653 00000000         
  654 00000000 E000E400 
                       NVIC_IPR0
                               equ              (NVIC_BASE + 0x300) ; Offset: 0



ARM Macro Assembler    Page 38 


                                                            x300 (R/W)  Interru
                                                            pt Priority Registe
                                                            r (8Bit wide) */
  655 00000000         
  656 00000000         
  657 00000000         
  658 00000000         
  659 00000000                 END
   32 00000000         
   33 00000000         
   34 00000000         ; ------------------------------- exportierte Variablen 
                       ------------------------------------
   35 00000000         
   36 00000000         
   37 00000000         ; ------------------------------- importierte Variablen 
                       ------------------------------------  
   38 00000000         
   39 00000000         
   40 00000000         ; ------------------------------- exportierte Funktionen
                        -----------------------------------  
   41 00000000                 EXPORT           main
   42 00000000                 EXPORT           EXTI0_IRQHandler
   43 00000000                 EXPORT           EXTI1_IRQHandler
   44 00000000                 EXPORT           EXTI2_IRQHandler
   45 00000000                 EXPORT           TIM6_IRQHandler
   46 00000000         
   47 00000000         ; ------------------------------- importierte Funktionen
                        -----------------------------------
   48 00000000                 IMPORT           up_delay
   49 00000000         
   50 00000000         ; ------------------------------- symbolische Konstanten
                        ------------------------------------
   51 00000000        1 
                       ZAEHLERSTAND
                               RN               R1
   52 00000000        2 
                       ZEHNER  RN               R2
   53 00000000        3 
                       EINER   RN               R3
   54 00000000         
   55 00000000         ; ------------------------------ Datensection / Variable
                       n -----------------------------------  
   56 00000000         
   57 00000000         
   58 00000000         ; ------------------------------- Codesection / Programm
                        ------------------------------------
   59 00000000                 AREA             main_s, code
   60 00000000         
   61 00000000         
   62 00000000         
   63 00000000         ; Einsprungpunkt  
   64 00000000         main    PROC
   65 00000000         ;#################################
   66 00000000         ; Konfiguration der Portpins PA[7:0] fuer LEDs 
   67 00000000 4881            ldr              R0, =RCC_AHB2ENR
   68 00000002 F04F 0105       ldr              R1, =5      ; enable Port A+C  
                                                            (Bit 0 und 2)
   69 00000006 6001            str              R1, [R0]
   70 00000008         



ARM Macro Assembler    Page 39 


   71 00000008 F04F 4090       ldr              R0, =GPIOA_MODER
   72 0000000C 6801            ldr              R1, [R0]    ; Reset Value for P
                                                            ort A =0xABFFFFFF (
                                                            Alternate Functions
                                                             for JTAG /SWD)
   73 0000000E 4A7F            ldr              R2, =0xFFFF0000 ; Maskierung de
                                                            r Pins [7:0]
   74 00000010 EA01 0102       and              R1, R1, R2
   75 00000014 F245 5255       ldr              R2, =0x00005555 ; 01: General O
                                                            utput Mode
   76 00000018 EA41 0102       orr              R1, R2
   77 0000001C 6001            str              R1, [R0]
   78 0000001E         
   79 0000001E         
   80 0000001E         ;#################################
   81 0000001E         ; Konfiguration des Portpins PC[0], PC[1] und PC[2] fuer
                        Button
   82 0000001E 487C            ldr              R0, =GPIOC_MODER
   83 00000020 6801            ldr              R1, [R0]
   84 00000022 F06F 023F       ldr              R2, =0xFFFFFFC0 ; Maskierung de
                                                            r Bits [5:0]
   85 00000026 EA01 0102       and              R1, R1, R2  ; Bits [0:5] = 00 =
                                                            > Input Mode
   86 0000002A 6001            str              R1, [R0]
   87 0000002C         
   88 0000002C         
   89 0000002C         ;###################################################
   90 0000002C         ; Konfiguration des externen Interrupts
   91 0000002C         ; Clock enable
   92 0000002C 4879            ldr              R0, =RCC_APB2ENR
   93 0000002E 6801            ldr              R1, [R0]
   94 00000030 F041 0101       orr              R1, #0x01   ; Bit 0 -> SysCfg
   95 00000034 6001            str              R1, [R0]
   96 00000036         
   97 00000036         ; Pin mapping for EXTI0 (PC[0])
   98 00000036 4878            ldr              R0, =SYSCFG_EXTICR1
   99 00000038 F04F 0102       mov              R1, #2      ; PC[0] -> EXTI_LIN
                                                            E0
  100 0000003C 6001            str              R1, [R0]
  101 0000003E         ; Pin mapping for EXTI1 (PC[1])
  102 0000003E F04F 0108       mov              R1, #8      ; PC[1] -> EXTI_LIN
                                                            E1
  103 00000042 6001            str              R1, [R0]
  104 00000044         ; Pin mapping for EXTI2 (PC[2])
  105 00000044 F04F 0110       mov              R1, #16     ; PC[2] -> EXTI_LIN
                                                            E2
  106 00000048 6001            str              R1, [R0]
  107 0000004A         
  108 0000004A         ; Triggerflanken for EXTI0
  109 0000004A 4874            ldr              R0, =EXTI_FTSR1
  110 0000004C F04F 0101       mov              R1, #1      ; Bit 0 -> EXTI_LIN
                                                            E0
  111 00000050 6001            str              R1, [R0]
  112 00000052         ; Triggerflanken for EXTI1
  113 00000052 F04F 0102       mov              R1, #2      ; Bit 1 -> EXTI_LIN
                                                            E1
  114 00000056 6001            str              R1, [R0]
  115 00000058         ; Triggerflanken for EXTI2
  116 00000058 F04F 0104       mov              R1, #4      ; Bit 2 -> EXTI_LIN



ARM Macro Assembler    Page 40 


                                                            E2
  117 0000005C 6001            str              R1, [R0]
  118 0000005E         
  119 0000005E         ; NVIC: EXTI Line0-2 Interrupts = ID 6, 7, 8 => ICPR0/IS
                       ER0
  120 0000005E 4870            ldr              R0, =NVIC_ICPR0
  121 00000060 F44F 71E0       mov              R1, #(1 << 6) | (1 << 7) | (1 <
< 8)
  122 00000064 6001            str              R1, [R0]    ; clear pending bit
                                                            s
  123 00000066         
  124 00000066 486F            ldr              R0, =NVIC_ISER0
  125 00000068 F44F 71E0       mov              R1, #(1 << 6) | (1 << 7) | (1 <
< 8)
  126 0000006C 6001            str              R1, [R0]    ; set enable bits
  127 0000006E         
  128 0000006E         ; EXTI Line0-2 Interrupts freigeben
  129 0000006E 486E            ldr              R0, =EXTI_IMR1
  130 00000070 F04F 0107       mov              R1, #7      ; bit0-2 -> EXTI Li
                                                            ne 0-2
  131 00000074 6001            str              R1, [R0]
  132 00000076         
  133 00000076         
  134 00000076         ;###################################################
  135 00000076         ; Konfiguration des Timers 6
  136 00000076         ; Clock enable
  137 00000076 486D            ldr              R0, =RCC_APB1ENR1
  138 00000078 6801            ldr              R1, [R0]
  139 0000007A F041 0110       orr              R1, #0x10   ; Bit 4 -> Timer 6
  140 0000007E 6001            str              R1, [R0]
  141 00000080         ; Prescale Register
  142 00000080 486B            ldr              R0, =TIM6_PSC
  143 00000082 F643 617F       mov              R1, #(16000-1) 
                                                            ; -> TC_CLK = 1 ms
  144 00000086 6001            str              R1, [R0]
  145 00000088         ; Auto-Reload Register
  146 00000088 486A            ldr              R0, =TIM6_ARR
  147 0000008A F240 11F3       mov              R1, #499    ; -> T = 500 ms
  148 0000008E 6001            str              R1, [R0]
  149 00000090         ; Timer control register
  150 00000090 4869            ldr              R0, =TIM6_CR1
  151 00000092 F04F 0101       mov              R1, #1      ; -> counter enable
                                                             
  152 00000096 6001            str              R1, [R0]
  153 00000098         
  154 00000098         ; Timer 6: NVIC
  155 00000098 4868            ldr              R0, =NVIC_ICPR1 ; clear pending
                                                             bit 
  156 0000009A F44F 0180       mov              R1, #(1<<22)
  157 0000009E 6001            str              R1, [R0]
  158 000000A0 4867            ldr              R0, =NVIC_ISER1 
                                                            ; set enable bit
  159 000000A2 F44F 0180       mov              R1, #(1<<22)
  160 000000A6 6001            str              R1, [R0]
  161 000000A8         
  162 000000A8 F04F 013F       MOV              ZAEHLERSTAND, #0x3F
  163 000000AC F04F 033F       MOV              EINER, #0x3F
  164 000000B0 F04F 02BF       MOV              ZEHNER, #0xBF
  165 000000B4         



ARM Macro Assembler    Page 41 


  166 000000B4         ; Timer 6 Interrupt
  167 000000B4 4863            ldr              R0, =TIM6_DIER
  168 000000B6 F04F 0101       mov              R1, #1      ; -> update interru
                                                            pt enable 
  169 000000BA 6001            str              R1, [R0]
  170 000000BC         
  171 000000BC E7FF            B                loop
  172 000000BE         
  173 000000BE         ; Endlosschleife
  174 000000BE         loop
  175 000000BE         
  176 000000BE E7FE            B                loop
  177 000000C0         
  178 000000C0         ;#######################################################
                       ###
  179 000000C0         ;Zahl um 1 erhöhen
  180 000000C0         zaehler
  181 000000C0 4861            LDR              R0, =GPIOA_ODR
  182 000000C2 6801            LDR              R1, [R0]
  183 000000C4         
  184 000000C4 2B6F            CMP              EINER, #0x6F ; 9 ? wenn ja -> 0
                                                            
  185 000000C6 D102            BNE              nicht_neun
  186 000000C8 F04F 033F       MOV              EINER, #0x3F
  187 000000CC E025            B                nicht_null
  188 000000CE         nicht_neun
  189 000000CE         
  190 000000CE 2B7F            CMP              EINER, #0x7F ; 8 ? wenn ja -> 9
                                                            
  191 000000D0 D101            BNE              nicht_acht
  192 000000D2 F04F 036F       MOV              EINER, #0x6F
  193 000000D6         nicht_acht
  194 000000D6         
  195 000000D6 2B27            CMP              EINER, #0x27 ; 7 ? wenn ja -> 8
                                                            
  196 000000D8 D101            BNE              nicht_sieben
  197 000000DA F04F 037F       MOV              EINER, #0x7F
  198 000000DE         nicht_sieben
  199 000000DE         
  200 000000DE 2B7D            CMP              EINER, #0x7D ; 6 ? wenn ja -> 7
                                                            
  201 000000E0 D101            BNE              nicht_sechs
  202 000000E2 F04F 0327       MOV              EINER, #0x27
  203 000000E6         nicht_sechs
  204 000000E6         
  205 000000E6 2B6D            CMP              EINER, #0x6D ; 5 ? wenn ja -> 6
                                                            
  206 000000E8 D101            BNE              nicht_fuenf
  207 000000EA F04F 037D       MOV              EINER, #0x7D
  208 000000EE         nicht_fuenf
  209 000000EE         
  210 000000EE 2B66            CMP              EINER, #0x66 ; 4 ? wenn ja -> 5
                                                            
  211 000000F0 D101            BNE              nicht_vier
  212 000000F2 F04F 036D       MOV              EINER, #0x6D
  213 000000F6         nicht_vier
  214 000000F6         
  215 000000F6 2B4F            CMP              EINER, #0x4F ; 3 ? wenn ja -> 4
                                                            



ARM Macro Assembler    Page 42 


  216 000000F8 D101            BNE              nicht_drei
  217 000000FA F04F 0366       MOV              EINER, #0x66
  218 000000FE         nicht_drei
  219 000000FE         
  220 000000FE 2B5B            CMP              EINER, #0x5B ; 2 ? wenn ja -> 3
                                                            
  221 00000100 D101            BNE              nicht_zwei
  222 00000102 F04F 034F       MOV              EINER, #0x4F
  223 00000106         nicht_zwei
  224 00000106         
  225 00000106 2B06            CMP              EINER, #0x06 ; 1 ? wenn ja -> 2
                                                            
  226 00000108 D101            BNE              nicht_eins
  227 0000010A F04F 035B       MOV              EINER, #0x5B
  228 0000010E         nicht_eins
  229 0000010E         
  230 0000010E 2B3F            CMP              EINER, #0x3F ; 0 ? wenn ja -> 9
                                                            
  231 00000110 D103            BNE              nicht_null
  232 00000112 F04F 0306       MOV              EINER, #0x06
  233 00000116 6003            STR              EINER, [R0]
  234 00000118         ;Zehnerstelle+1
  235 00000118 E001            B                zeta
  236 0000011A         
  237 0000011A         nicht_null
  238 0000011A         
  239 0000011A 6003            STR              EINER, [R0]
  240 0000011C         
  241 0000011C E028            b                z_nicht_null
  242 0000011E         
  243 0000011E         ;#################################
  244 0000011E         zeta                                 ;Zehnerstelle 
  245 0000011E         
  246 0000011E 2AEF            CMP              ZEHNER, #0xEF 
                                                            ; 9 ? wenn ja -> 0
  247 00000120 D102            BNE              z_nicht_neun
  248 00000122 F04F 02BF       MOV              ZEHNER, #0xBF
  249 00000126 E023            B                z_nicht_null
  250 00000128         z_nicht_neun
  251 00000128         
  252 00000128 2AFF            CMP              ZEHNER, #0xFF 
                                                            ; 8 ? wenn ja -> 9
  253 0000012A D101            BNE              z_nicht_acht
  254 0000012C F04F 02EF       MOV              ZEHNER, #0xEF
  255 00000130         z_nicht_acht
  256 00000130         
  257 00000130 2AA7            CMP              ZEHNER, #0xA7 
                                                            ; 7 ? wenn ja -> 8
  258 00000132 D101            BNE              z_nicht_sieben
  259 00000134 F04F 02FF       MOV              ZEHNER, #0xFF
  260 00000138         z_nicht_sieben
  261 00000138         
  262 00000138 2AFD            CMP              ZEHNER, #0xFD 
                                                            ; 6 ? wenn ja -> 7
  263 0000013A D101            BNE              z_nicht_sechs
  264 0000013C F04F 02A7       MOV              ZEHNER, #0xA7
  265 00000140         z_nicht_sechs
  266 00000140         
  267 00000140 2AED            CMP              ZEHNER, #0xED 



ARM Macro Assembler    Page 43 


                                                            ; 5 ? wenn ja -> 6
  268 00000142 D101            BNE              z_nicht_fuenf
  269 00000144 F04F 02FD       MOV              ZEHNER, #0xFD
  270 00000148         z_nicht_fuenf
  271 00000148         
  272 00000148 2AE6            CMP              ZEHNER, #0xE6 
                                                            ; 4 ? wenn ja -> 5
  273 0000014A D101            BNE              z_nicht_vier
  274 0000014C F04F 02ED       MOV              ZEHNER, #0xED
  275 00000150         z_nicht_vier
  276 00000150         
  277 00000150 2ACF            CMP              ZEHNER, #0xCF 
                                                            ; 3 ? wenn ja -> 4
  278 00000152 D101            BNE              z_nicht_drei
  279 00000154 F04F 02E6       MOV              ZEHNER, #0xE6
  280 00000158         z_nicht_drei
  281 00000158         
  282 00000158 2ADB            CMP              ZEHNER, #0xDB 
                                                            ; 2 ? wenn ja -> 3
  283 0000015A D101            BNE              z_nicht_zwei
  284 0000015C F04F 02CF       MOV              ZEHNER, #0xCF
  285 00000160         z_nicht_zwei
  286 00000160         
  287 00000160 2A86            CMP              ZEHNER, #0x86 
                                                            ; 1 ? wenn ja -> 2
  288 00000162 D101            BNE              z_nicht_eins
  289 00000164 F04F 02DB       MOV              ZEHNER, #0xDB
  290 00000168         z_nicht_eins
  291 00000168         
  292 00000168 2ABF            CMP              ZEHNER, #0xBF 
                                                            ; 0 ? wenn ja -> 1
  293 0000016A D101            BNE              z_nicht_null
  294 0000016C F04F 0286       MOV              ZEHNER, #0x86
  295 00000170         
  296 00000170         z_nicht_null
  297 00000170         
  298 00000170 6002            STR              ZEHNER, [R0]
  299 00000172         
  300 00000172 E7A4            B                loop
  301 00000174         
  302 00000174                 ENDP
  303 00000174         
  304 00000174         ; Timer 6 Interrupt Handler
  305 00000174         TIM6_IRQHandler
                               PROC
  306 00000174         ; Timer 6 abgelaufen
  307 00000174         ; Zurücksetzen des Timers
  308 00000174 4835            ldr              R0, =TIM6_SR
  309 00000176 F04F 0100       mov              R1, #0
  310 0000017A 6001            str              R1, [R0]
  311 0000017C         
  312 0000017C         ; Zähler erhöhen
  313 0000017C F7FF FFA0       BL               zaehler
  314 00000180         
  315 00000180         ; Schalten der LEDs
  316 00000180 4831            ldr              R0, =GPIOA_ODR
  317 00000182 6801            ldr              R1, [R0]
  318 00000184 F8C0 B000       str              R11, [R0]
  319 00000188         



ARM Macro Assembler    Page 44 


  320 00000188 4770            bx               lr
  321 0000018A                 ENDP
  322 0000018A         
  323 0000018A         ; External Interrupt Handler for EXTI0 (Button connected
                        to PC[0])
  324 0000018A         EXTI0_IRQHandler
                               PROC
  325 0000018A B530            push             {R4, R5, LR}
  326 0000018C         
  327 0000018C         ; 10 ms warten (Tasterprellen)
  328 0000018C F04F 000A       mov              R0, #10     ; nested UP-Aufruf
  329 00000190 F7FF FFFE       bl               up_delay    ; -> LR sichern
  330 00000194         
  331 00000194         ; Zustand des Lauflichtes ändern
  332 00000194         ; 0(default): aus / 1 an
  333 00000194 F08A 0A01       eor              R10, #1     ; toggelt Bit 0
  334 00000198         
  335 00000198         ; Interrupt Flag zurücksetzen
  336 00000198 4C2D            ldr              R4, =EXTI_PR1
  337 0000019A F04F 0501       mov              R5, #1      ; clear by writing 
                                                            1
  338 0000019E 6025            str              R5, [R4]
  339 000001A0         
  340 000001A0         ; Zähler erhöhen
  341 000001A0 F7FF FF8E       BL               zaehler
  342 000001A4         
  343 000001A4 E8BD 4030       pop              {R4, R5, LR}
  344 000001A8 4770            bx               lr
  345 000001AA                 ENDP
  346 000001AA         
  347 000001AA         
  348 000001AA         ; External Interrupt Handler for EXTI1 (Button connected
                        to PC[1])
  349 000001AA         EXTI1_IRQHandler
                               PROC
  350 000001AA B530            push             {R4, R5, LR}
  351 000001AC         
  352 000001AC         ; 10 ms warten (Tasterprellen)
  353 000001AC F04F 000A       mov              R0, #10     ; nested UP-Aufruf
  354 000001B0 F7FF FFFE       bl               up_delay
  355 000001B4         
  356 000001B4         ; Zustand des Lauflichtes ändern
  357 000001B4         ; 0(default): aus / 1 an
  358 000001B4 4C27            ldr              R4, =GPIOC_IDR
  359 000001B6 6825            ldr              R5, [R4]
  360 000001B8 F015 0F02       tst              R5, #0x00000002 ; Test Zustand 
                                                            des PC[1]
  361 000001BC D004            beq              EXTI1_no_stop ; Wenn Button 0 n
                                                            icht gedrückt wurde
                                                             -> Zustandswechsel
                                                            
  362 000001BE         
  363 000001BE         ; Stop-Funktionalität: Wenn Button 0 gedrückt wurde -> T
                       imer stop
  364 000001BE 481E            ldr              R0, =TIM6_CR1
  365 000001C0 6801            ldr              R1, [R0]
  366 000001C2 F021 0101       bic              R1, R1, #1  ; Clear Bit 0, um d
                                                            en Timer zu stoppen
                                                            



ARM Macro Assembler    Page 45 


  367 000001C6 6001            str              R1, [R0]
  368 000001C8         
  369 000001C8         EXTI1_no_stop
  370 000001C8         ; Interrupt Flag zurücksetzen
  371 000001C8 4C21            ldr              R4, =EXTI_PR1
  372 000001CA F04F 0502       mov              R5, #2      ; clear by writing 
                                                            1
  373 000001CE 6025            str              R5, [R4]
  374 000001D0         
  375 000001D0         ; Zähler erhöhen
  376 000001D0 F7FF FF76       BL               zaehler
  377 000001D4         
  378 000001D4 E8BD 4030       pop              {R4, R5, LR}
  379 000001D8 4770            bx               lr
  380 000001DA                 ENDP
  381 000001DA         
  382 000001DA         ; External Interrupt Handler for EXTI2 (Button connected
                        to PC[2])
  383 000001DA         EXTI2_IRQHandler
                               PROC
  384 000001DA B530            push             {R4, R5, LR}
  385 000001DC         
  386 000001DC         ; 10 ms warten (Tasterprellen)
  387 000001DC F04F 000A       mov              R0, #10     ; nested UP-Aufruf
  388 000001E0 F7FF FFFE       bl               up_delay
  389 000001E4         
  390 000001E4         ; Zustand des Lauflichtes ändern
  391 000001E4         ; 0(default): aus / 1 an
  392 000001E4 4C1B            ldr              R4, =GPIOC_IDR
  393 000001E6 6825            ldr              R5, [R4]
  394 000001E8 F015 0F04       tst              R5, #0x00000004 ; Test Zustand 
                                                            des PC[2]
  395 000001EC D003            beq              EXTI2_no_reset ; Wenn Button 1 
                                                            nicht gedrückt wurd
                                                            e -> Zustandswechse
                                                            l 
  396 000001EE         
  397 000001EE         ; Reset-Funktionalität: Wenn Button 1 gedrückt wurde -> 
                       Zähler zurücksetzen
  398 000001EE F04F 033F       MOV              EINER, #0x3F
  399 000001F2 F04F 02BF       MOV              ZEHNER, #0xBF
  400 000001F6         
  401 000001F6         EXTI2_no_reset
  402 000001F6         ; Interrupt Flag zurücksetzen
  403 000001F6 4C16            ldr              R4, =EXTI_PR1
  404 000001F8 F04F 0504       mov              R5, #4      ; clear by writing 
                                                            1
  405 000001FC 6025            str              R5, [R4]
  406 000001FE         
  407 000001FE         ; Zähler erhöhen
  408 000001FE F7FF FF5F       BL               zaehler
  409 00000202         
  410 00000202 E8BD 4030       pop              {R4, R5, LR}
  411 00000206 4770            bx               lr
  412 00000208                 ENDP
  413 00000208         
  414 00000208                 END
              4002104C 
              FFFF0000 



ARM Macro Assembler    Page 46 


              48000800 
              40021060 
              40010008 
              4001040C 
              E000E280 
              E000E100 
              40010400 
              40021058 
              40001028 
              4000102C 
              40001000 
              E000E284 
              E000E104 
              4000100C 
              48000014 
              40001010 
              40010414 
              48000810 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -ID:\Keil\Pack\Keil\STM32G4xx_DFP\
1.5.0\Drivers\CMSIS\Device\ST\STM32G4xx\Include --predefine="__UVISION_VERSION 
SETA 538" --predefine="STM32G474xx SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EXTI0_IRQHandler 0000018A

Symbol: EXTI0_IRQHandler
   Definitions
      At line 324 in file main.s
   Uses
      At line 42 in file main.s
Comment: EXTI0_IRQHandler used once
EXTI1_IRQHandler 000001AA

Symbol: EXTI1_IRQHandler
   Definitions
      At line 349 in file main.s
   Uses
      At line 43 in file main.s
Comment: EXTI1_IRQHandler used once
EXTI1_no_stop 000001C8

Symbol: EXTI1_no_stop
   Definitions
      At line 369 in file main.s
   Uses
      At line 361 in file main.s
Comment: EXTI1_no_stop used once
EXTI2_IRQHandler 000001DA

Symbol: EXTI2_IRQHandler
   Definitions
      At line 383 in file main.s
   Uses
      At line 44 in file main.s
Comment: EXTI2_IRQHandler used once
EXTI2_no_reset 000001F6

Symbol: EXTI2_no_reset
   Definitions
      At line 401 in file main.s
   Uses
      At line 395 in file main.s
Comment: EXTI2_no_reset used once
TIM6_IRQHandler 00000174

Symbol: TIM6_IRQHandler
   Definitions
      At line 305 in file main.s
   Uses
      At line 45 in file main.s
Comment: TIM6_IRQHandler used once
loop 000000BE

Symbol: loop
   Definitions
      At line 174 in file main.s
   Uses
      At line 171 in file main.s
      At line 176 in file main.s
      At line 300 in file main.s

main 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: main
   Definitions
      At line 64 in file main.s
   Uses
      At line 41 in file main.s
Comment: main used once
main_s 00000000

Symbol: main_s
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: main_s unused
nicht_acht 000000D6

Symbol: nicht_acht
   Definitions
      At line 193 in file main.s
   Uses
      At line 191 in file main.s
Comment: nicht_acht used once
nicht_drei 000000FE

Symbol: nicht_drei
   Definitions
      At line 218 in file main.s
   Uses
      At line 216 in file main.s
Comment: nicht_drei used once
nicht_eins 0000010E

Symbol: nicht_eins
   Definitions
      At line 228 in file main.s
   Uses
      At line 226 in file main.s
Comment: nicht_eins used once
nicht_fuenf 000000EE

Symbol: nicht_fuenf
   Definitions
      At line 208 in file main.s
   Uses
      At line 206 in file main.s
Comment: nicht_fuenf used once
nicht_neun 000000CE

Symbol: nicht_neun
   Definitions
      At line 188 in file main.s
   Uses
      At line 185 in file main.s
Comment: nicht_neun used once
nicht_null 0000011A

Symbol: nicht_null
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 237 in file main.s
   Uses
      At line 187 in file main.s
      At line 231 in file main.s

nicht_sechs 000000E6

Symbol: nicht_sechs
   Definitions
      At line 203 in file main.s
   Uses
      At line 201 in file main.s
Comment: nicht_sechs used once
nicht_sieben 000000DE

Symbol: nicht_sieben
   Definitions
      At line 198 in file main.s
   Uses
      At line 196 in file main.s
Comment: nicht_sieben used once
nicht_vier 000000F6

Symbol: nicht_vier
   Definitions
      At line 213 in file main.s
   Uses
      At line 211 in file main.s
Comment: nicht_vier used once
nicht_zwei 00000106

Symbol: nicht_zwei
   Definitions
      At line 223 in file main.s
   Uses
      At line 221 in file main.s
Comment: nicht_zwei used once
z_nicht_acht 00000130

Symbol: z_nicht_acht
   Definitions
      At line 255 in file main.s
   Uses
      At line 253 in file main.s
Comment: z_nicht_acht used once
z_nicht_drei 00000158

Symbol: z_nicht_drei
   Definitions
      At line 280 in file main.s
   Uses
      At line 278 in file main.s
Comment: z_nicht_drei used once
z_nicht_eins 00000168

Symbol: z_nicht_eins
   Definitions
      At line 290 in file main.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 288 in file main.s
Comment: z_nicht_eins used once
z_nicht_fuenf 00000148

Symbol: z_nicht_fuenf
   Definitions
      At line 270 in file main.s
   Uses
      At line 268 in file main.s
Comment: z_nicht_fuenf used once
z_nicht_neun 00000128

Symbol: z_nicht_neun
   Definitions
      At line 250 in file main.s
   Uses
      At line 247 in file main.s
Comment: z_nicht_neun used once
z_nicht_null 00000170

Symbol: z_nicht_null
   Definitions
      At line 296 in file main.s
   Uses
      At line 241 in file main.s
      At line 249 in file main.s
      At line 293 in file main.s

z_nicht_sechs 00000140

Symbol: z_nicht_sechs
   Definitions
      At line 265 in file main.s
   Uses
      At line 263 in file main.s
Comment: z_nicht_sechs used once
z_nicht_sieben 00000138

Symbol: z_nicht_sieben
   Definitions
      At line 260 in file main.s
   Uses
      At line 258 in file main.s
Comment: z_nicht_sieben used once
z_nicht_vier 00000150

Symbol: z_nicht_vier
   Definitions
      At line 275 in file main.s
   Uses
      At line 273 in file main.s
Comment: z_nicht_vier used once
z_nicht_zwei 00000160

Symbol: z_nicht_zwei
   Definitions
      At line 285 in file main.s
   Uses
      At line 283 in file main.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Comment: z_nicht_zwei used once
zaehler 000000C0

Symbol: zaehler
   Definitions
      At line 180 in file main.s
   Uses
      At line 313 in file main.s
      At line 341 in file main.s
      At line 376 in file main.s
      At line 408 in file main.s

zeta 0000011E

Symbol: zeta
   Definitions
      At line 244 in file main.s
   Uses
      At line 235 in file main.s
Comment: zeta used once
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC12_COMMON_BASE 50000300

Symbol: ADC12_COMMON_BASE
   Definitions
      At line 180 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC12_COMMON_BASE unused
ADC1_BASE 50000000

Symbol: ADC1_BASE
   Definitions
      At line 178 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC1_BASE unused
ADC2_BASE 50000100

Symbol: ADC2_BASE
   Definitions
      At line 179 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC2_BASE unused
ADC345_COMMON_BASE 50000700

Symbol: ADC345_COMMON_BASE
   Definitions
      At line 184 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC345_COMMON_BASE unused
ADC3_BASE 50000400

Symbol: ADC3_BASE
   Definitions
      At line 181 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC3_BASE unused
ADC4_BASE 50000500

Symbol: ADC4_BASE
   Definitions
      At line 182 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC4_BASE unused
ADC5_BASE 50000600

Symbol: ADC5_BASE
   Definitions
      At line 183 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: ADC5_BASE unused
AHB1PERIPH_BASE 40020000

Symbol: AHB1PERIPH_BASE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 31 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 118 in file STM32G4xx_REG_ASM.inc
      At line 119 in file STM32G4xx_REG_ASM.inc
      At line 120 in file STM32G4xx_REG_ASM.inc
      At line 121 in file STM32G4xx_REG_ASM.inc
      At line 122 in file STM32G4xx_REG_ASM.inc
      At line 123 in file STM32G4xx_REG_ASM.inc
      At line 124 in file STM32G4xx_REG_ASM.inc
      At line 125 in file STM32G4xx_REG_ASM.inc

AHB2PERIPH_BASE 48000000

Symbol: AHB2PERIPH_BASE
   Definitions
      At line 32 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 170 in file STM32G4xx_REG_ASM.inc
      At line 171 in file STM32G4xx_REG_ASM.inc
      At line 172 in file STM32G4xx_REG_ASM.inc
      At line 173 in file STM32G4xx_REG_ASM.inc
      At line 174 in file STM32G4xx_REG_ASM.inc
      At line 175 in file STM32G4xx_REG_ASM.inc
      At line 176 in file STM32G4xx_REG_ASM.inc
      At line 178 in file STM32G4xx_REG_ASM.inc
      At line 179 in file STM32G4xx_REG_ASM.inc
      At line 180 in file STM32G4xx_REG_ASM.inc
      At line 181 in file STM32G4xx_REG_ASM.inc
      At line 182 in file STM32G4xx_REG_ASM.inc
      At line 183 in file STM32G4xx_REG_ASM.inc
      At line 184 in file STM32G4xx_REG_ASM.inc
      At line 186 in file STM32G4xx_REG_ASM.inc
      At line 187 in file STM32G4xx_REG_ASM.inc
      At line 188 in file STM32G4xx_REG_ASM.inc
      At line 189 in file STM32G4xx_REG_ASM.inc
      At line 190 in file STM32G4xx_REG_ASM.inc
      At line 196 in file STM32G4xx_REG_ASM.inc

APB1PERIPH_BASE 40000000

Symbol: APB1PERIPH_BASE
   Definitions
      At line 29 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 44 in file STM32G4xx_REG_ASM.inc
      At line 45 in file STM32G4xx_REG_ASM.inc
      At line 46 in file STM32G4xx_REG_ASM.inc
      At line 47 in file STM32G4xx_REG_ASM.inc
      At line 48 in file STM32G4xx_REG_ASM.inc
      At line 49 in file STM32G4xx_REG_ASM.inc
      At line 50 in file STM32G4xx_REG_ASM.inc
      At line 51 in file STM32G4xx_REG_ASM.inc
      At line 52 in file STM32G4xx_REG_ASM.inc
      At line 53 in file STM32G4xx_REG_ASM.inc
      At line 54 in file STM32G4xx_REG_ASM.inc
      At line 55 in file STM32G4xx_REG_ASM.inc
      At line 56 in file STM32G4xx_REG_ASM.inc
      At line 57 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 58 in file STM32G4xx_REG_ASM.inc
      At line 59 in file STM32G4xx_REG_ASM.inc
      At line 60 in file STM32G4xx_REG_ASM.inc
      At line 61 in file STM32G4xx_REG_ASM.inc
      At line 62 in file STM32G4xx_REG_ASM.inc
      At line 63 in file STM32G4xx_REG_ASM.inc
      At line 64 in file STM32G4xx_REG_ASM.inc
      At line 65 in file STM32G4xx_REG_ASM.inc
      At line 66 in file STM32G4xx_REG_ASM.inc
      At line 67 in file STM32G4xx_REG_ASM.inc
      At line 68 in file STM32G4xx_REG_ASM.inc
      At line 69 in file STM32G4xx_REG_ASM.inc
      At line 70 in file STM32G4xx_REG_ASM.inc
      At line 71 in file STM32G4xx_REG_ASM.inc
      At line 72 in file STM32G4xx_REG_ASM.inc
      At line 73 in file STM32G4xx_REG_ASM.inc
      At line 74 in file STM32G4xx_REG_ASM.inc
      At line 75 in file STM32G4xx_REG_ASM.inc

APB2PERIPH_BASE 40010000

Symbol: APB2PERIPH_BASE
   Definitions
      At line 30 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 78 in file STM32G4xx_REG_ASM.inc
      At line 79 in file STM32G4xx_REG_ASM.inc
      At line 80 in file STM32G4xx_REG_ASM.inc
      At line 81 in file STM32G4xx_REG_ASM.inc
      At line 82 in file STM32G4xx_REG_ASM.inc
      At line 83 in file STM32G4xx_REG_ASM.inc
      At line 84 in file STM32G4xx_REG_ASM.inc
      At line 85 in file STM32G4xx_REG_ASM.inc
      At line 86 in file STM32G4xx_REG_ASM.inc
      At line 87 in file STM32G4xx_REG_ASM.inc
      At line 88 in file STM32G4xx_REG_ASM.inc
      At line 89 in file STM32G4xx_REG_ASM.inc
      At line 90 in file STM32G4xx_REG_ASM.inc
      At line 91 in file STM32G4xx_REG_ASM.inc
      At line 92 in file STM32G4xx_REG_ASM.inc
      At line 93 in file STM32G4xx_REG_ASM.inc
      At line 95 in file STM32G4xx_REG_ASM.inc
      At line 96 in file STM32G4xx_REG_ASM.inc
      At line 97 in file STM32G4xx_REG_ASM.inc
      At line 98 in file STM32G4xx_REG_ASM.inc
      At line 99 in file STM32G4xx_REG_ASM.inc
      At line 100 in file STM32G4xx_REG_ASM.inc
      At line 101 in file STM32G4xx_REG_ASM.inc
      At line 102 in file STM32G4xx_REG_ASM.inc
      At line 103 in file STM32G4xx_REG_ASM.inc
      At line 104 in file STM32G4xx_REG_ASM.inc
      At line 105 in file STM32G4xx_REG_ASM.inc
      At line 108 in file STM32G4xx_REG_ASM.inc

CCMSRAM_BASE 10000000

Symbol: CCMSRAM_BASE
   Definitions
      At line 7 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: CCMSRAM_BASE unused
CCMSRAM_BB_BASE 22300000

Symbol: CCMSRAM_BB_BASE
   Definitions
      At line 16 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: CCMSRAM_BB_BASE unused
CCMSRAM_SIZE 00008000

Symbol: CCMSRAM_SIZE
   Definitions
      At line 26 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: CCMSRAM_SIZE unused
COMP1_BASE 40010200

Symbol: COMP1_BASE
   Definitions
      At line 80 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP1_BASE unused
COMP2_BASE 40010204

Symbol: COMP2_BASE
   Definitions
      At line 81 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP2_BASE unused
COMP3_BASE 40010208

Symbol: COMP3_BASE
   Definitions
      At line 82 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP3_BASE unused
COMP4_BASE 4001020C

Symbol: COMP4_BASE
   Definitions
      At line 83 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP4_BASE unused
COMP5_BASE 40010210

Symbol: COMP5_BASE
   Definitions
      At line 84 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP5_BASE unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

COMP6_BASE 40010214

Symbol: COMP6_BASE
   Definitions
      At line 85 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP6_BASE unused
COMP7_BASE 40010218

Symbol: COMP7_BASE
   Definitions
      At line 86 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: COMP7_BASE unused
CORDIC_BASE 40020C00

Symbol: CORDIC_BASE
   Definitions
      At line 121 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: CORDIC_BASE unused
CRC_BASE 40023000

Symbol: CRC_BASE
   Definitions
      At line 125 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: CRC_BASE unused
CRS_BASE 40002000

Symbol: CRS_BASE
   Definitions
      At line 50 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: CRS_BASE unused
DAC1_BASE 50000800

Symbol: DAC1_BASE
   Definitions
      At line 187 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DAC1_BASE unused
DAC2_BASE 50000C00

Symbol: DAC2_BASE
   Definitions
      At line 188 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DAC2_BASE unused
DAC3_BASE 50001000

Symbol: DAC3_BASE



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 189 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DAC3_BASE unused
DAC4_BASE 50001400

Symbol: DAC4_BASE
   Definitions
      At line 190 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DAC4_BASE unused
DAC_BASE 50000800

Symbol: DAC_BASE
   Definitions
      At line 186 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DAC_BASE unused
DBGMCU_BASE E0042000

Symbol: DBGMCU_BASE
   Definitions
      At line 198 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DBGMCU_BASE unused
DMA1_BASE 40020000

Symbol: DMA1_BASE
   Definitions
      At line 118 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 127 in file STM32G4xx_REG_ASM.inc
      At line 128 in file STM32G4xx_REG_ASM.inc
      At line 129 in file STM32G4xx_REG_ASM.inc
      At line 130 in file STM32G4xx_REG_ASM.inc
      At line 131 in file STM32G4xx_REG_ASM.inc
      At line 132 in file STM32G4xx_REG_ASM.inc
      At line 133 in file STM32G4xx_REG_ASM.inc
      At line 134 in file STM32G4xx_REG_ASM.inc

DMA1_Channel1_BASE 40020008

Symbol: DMA1_Channel1_BASE
   Definitions
      At line 127 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel1_BASE unused
DMA1_Channel2_BASE 4002001C

Symbol: DMA1_Channel2_BASE
   Definitions
      At line 128 in file STM32G4xx_REG_ASM.inc
   Uses
      None



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Comment: DMA1_Channel2_BASE unused
DMA1_Channel3_BASE 40020030

Symbol: DMA1_Channel3_BASE
   Definitions
      At line 129 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel3_BASE unused
DMA1_Channel4_BASE 40020044

Symbol: DMA1_Channel4_BASE
   Definitions
      At line 130 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel4_BASE unused
DMA1_Channel5_BASE 40020058

Symbol: DMA1_Channel5_BASE
   Definitions
      At line 131 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel5_BASE unused
DMA1_Channel6_BASE 4002006C

Symbol: DMA1_Channel6_BASE
   Definitions
      At line 132 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel6_BASE unused
DMA1_Channel7_BASE 40020080

Symbol: DMA1_Channel7_BASE
   Definitions
      At line 133 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel7_BASE unused
DMA1_Channel8_BASE 40020094

Symbol: DMA1_Channel8_BASE
   Definitions
      At line 134 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA1_Channel8_BASE unused
DMA2_BASE 40020400

Symbol: DMA2_BASE
   Definitions
      At line 119 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 136 in file STM32G4xx_REG_ASM.inc
      At line 137 in file STM32G4xx_REG_ASM.inc
      At line 138 in file STM32G4xx_REG_ASM.inc
      At line 139 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 140 in file STM32G4xx_REG_ASM.inc
      At line 141 in file STM32G4xx_REG_ASM.inc
      At line 142 in file STM32G4xx_REG_ASM.inc
      At line 143 in file STM32G4xx_REG_ASM.inc

DMA2_Channel1_BASE 40020408

Symbol: DMA2_Channel1_BASE
   Definitions
      At line 136 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel1_BASE unused
DMA2_Channel2_BASE 4002041C

Symbol: DMA2_Channel2_BASE
   Definitions
      At line 137 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel2_BASE unused
DMA2_Channel3_BASE 40020430

Symbol: DMA2_Channel3_BASE
   Definitions
      At line 138 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel3_BASE unused
DMA2_Channel4_BASE 40020444

Symbol: DMA2_Channel4_BASE
   Definitions
      At line 139 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel4_BASE unused
DMA2_Channel5_BASE 40020458

Symbol: DMA2_Channel5_BASE
   Definitions
      At line 140 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel5_BASE unused
DMA2_Channel6_BASE 4002046C

Symbol: DMA2_Channel6_BASE
   Definitions
      At line 141 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel6_BASE unused
DMA2_Channel7_BASE 40020480

Symbol: DMA2_Channel7_BASE
   Definitions
      At line 142 in file STM32G4xx_REG_ASM.inc
   Uses



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      None
Comment: DMA2_Channel7_BASE unused
DMA2_Channel8_BASE 40020494

Symbol: DMA2_Channel8_BASE
   Definitions
      At line 143 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMA2_Channel8_BASE unused
DMAMUX1_BASE 40020800

Symbol: DMAMUX1_BASE
   Definitions
      At line 120 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 145 in file STM32G4xx_REG_ASM.inc
      At line 146 in file STM32G4xx_REG_ASM.inc
      At line 147 in file STM32G4xx_REG_ASM.inc
      At line 148 in file STM32G4xx_REG_ASM.inc
      At line 149 in file STM32G4xx_REG_ASM.inc
      At line 150 in file STM32G4xx_REG_ASM.inc
      At line 151 in file STM32G4xx_REG_ASM.inc
      At line 152 in file STM32G4xx_REG_ASM.inc
      At line 153 in file STM32G4xx_REG_ASM.inc
      At line 154 in file STM32G4xx_REG_ASM.inc
      At line 155 in file STM32G4xx_REG_ASM.inc
      At line 156 in file STM32G4xx_REG_ASM.inc
      At line 157 in file STM32G4xx_REG_ASM.inc
      At line 158 in file STM32G4xx_REG_ASM.inc
      At line 159 in file STM32G4xx_REG_ASM.inc
      At line 160 in file STM32G4xx_REG_ASM.inc
      At line 161 in file STM32G4xx_REG_ASM.inc
      At line 162 in file STM32G4xx_REG_ASM.inc
      At line 163 in file STM32G4xx_REG_ASM.inc
      At line 164 in file STM32G4xx_REG_ASM.inc
      At line 166 in file STM32G4xx_REG_ASM.inc
      At line 167 in file STM32G4xx_REG_ASM.inc

DMAMUX1_Channel0_BASE 40020800

Symbol: DMAMUX1_Channel0_BASE
   Definitions
      At line 145 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel0_BASE unused
DMAMUX1_Channel10_BASE 40020828

Symbol: DMAMUX1_Channel10_BASE
   Definitions
      At line 155 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel10_BASE unused
DMAMUX1_Channel11_BASE 4002082C

Symbol: DMAMUX1_Channel11_BASE
   Definitions



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

      At line 156 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel11_BASE unused
DMAMUX1_Channel12_BASE 40020830

Symbol: DMAMUX1_Channel12_BASE
   Definitions
      At line 157 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel12_BASE unused
DMAMUX1_Channel13_BASE 40020834

Symbol: DMAMUX1_Channel13_BASE
   Definitions
      At line 158 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel13_BASE unused
DMAMUX1_Channel14_BASE 40020838

Symbol: DMAMUX1_Channel14_BASE
   Definitions
      At line 159 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel14_BASE unused
DMAMUX1_Channel15_BASE 4002083C

Symbol: DMAMUX1_Channel15_BASE
   Definitions
      At line 160 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel15_BASE unused
DMAMUX1_Channel1_BASE 40020804

Symbol: DMAMUX1_Channel1_BASE
   Definitions
      At line 146 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel1_BASE unused
DMAMUX1_Channel2_BASE 40020808

Symbol: DMAMUX1_Channel2_BASE
   Definitions
      At line 147 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel2_BASE unused
DMAMUX1_Channel3_BASE 4002080C

Symbol: DMAMUX1_Channel3_BASE
   Definitions
      At line 148 in file STM32G4xx_REG_ASM.inc
   Uses
      None



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

Comment: DMAMUX1_Channel3_BASE unused
DMAMUX1_Channel4_BASE 40020810

Symbol: DMAMUX1_Channel4_BASE
   Definitions
      At line 149 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel4_BASE unused
DMAMUX1_Channel5_BASE 40020814

Symbol: DMAMUX1_Channel5_BASE
   Definitions
      At line 150 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel5_BASE unused
DMAMUX1_Channel6_BASE 40020818

Symbol: DMAMUX1_Channel6_BASE
   Definitions
      At line 151 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel6_BASE unused
DMAMUX1_Channel7_BASE 4002081C

Symbol: DMAMUX1_Channel7_BASE
   Definitions
      At line 152 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel7_BASE unused
DMAMUX1_Channel8_BASE 40020820

Symbol: DMAMUX1_Channel8_BASE
   Definitions
      At line 153 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel8_BASE unused
DMAMUX1_Channel9_BASE 40020824

Symbol: DMAMUX1_Channel9_BASE
   Definitions
      At line 154 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_Channel9_BASE unused
DMAMUX1_ChannelStatus_BASE 40020880

Symbol: DMAMUX1_ChannelStatus_BASE
   Definitions
      At line 166 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_ChannelStatus_BASE unused
DMAMUX1_RequestGenStatus_BASE 40020940




ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

Symbol: DMAMUX1_RequestGenStatus_BASE
   Definitions
      At line 167 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_RequestGenStatus_BASE unused
DMAMUX1_RequestGenerator0_BASE 40020900

Symbol: DMAMUX1_RequestGenerator0_BASE
   Definitions
      At line 161 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_RequestGenerator0_BASE unused
DMAMUX1_RequestGenerator1_BASE 40020904

Symbol: DMAMUX1_RequestGenerator1_BASE
   Definitions
      At line 162 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_RequestGenerator1_BASE unused
DMAMUX1_RequestGenerator2_BASE 40020908

Symbol: DMAMUX1_RequestGenerator2_BASE
   Definitions
      At line 163 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_RequestGenerator2_BASE unused
DMAMUX1_RequestGenerator3_BASE 4002090C

Symbol: DMAMUX1_RequestGenerator3_BASE
   Definitions
      At line 164 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: DMAMUX1_RequestGenerator3_BASE unused
EXTI_BASE 40010400

Symbol: EXTI_BASE
   Definitions
      At line 95 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 451 in file STM32G4xx_REG_ASM.inc
      At line 452 in file STM32G4xx_REG_ASM.inc
      At line 453 in file STM32G4xx_REG_ASM.inc
      At line 454 in file STM32G4xx_REG_ASM.inc
      At line 455 in file STM32G4xx_REG_ASM.inc
      At line 456 in file STM32G4xx_REG_ASM.inc
      At line 457 in file STM32G4xx_REG_ASM.inc
      At line 458 in file STM32G4xx_REG_ASM.inc
      At line 459 in file STM32G4xx_REG_ASM.inc
      At line 460 in file STM32G4xx_REG_ASM.inc
      At line 461 in file STM32G4xx_REG_ASM.inc
      At line 462 in file STM32G4xx_REG_ASM.inc

EXTI_EMR1 40010404




ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

Symbol: EXTI_EMR1
   Definitions
      At line 452 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_EMR1 unused
EXTI_EMR2 40010424

Symbol: EXTI_EMR2
   Definitions
      At line 458 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_EMR2 unused
EXTI_FTSR1 4001040C

Symbol: EXTI_FTSR1
   Definitions
      At line 454 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 109 in file main.s
Comment: EXTI_FTSR1 used once
EXTI_FTSR2 4001042C

Symbol: EXTI_FTSR2
   Definitions
      At line 460 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_FTSR2 unused
EXTI_IMR1 40010400

Symbol: EXTI_IMR1
   Definitions
      At line 451 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 129 in file main.s
Comment: EXTI_IMR1 used once
EXTI_IMR2 40010420

Symbol: EXTI_IMR2
   Definitions
      At line 457 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_IMR2 unused
EXTI_PR1 40010414

Symbol: EXTI_PR1
   Definitions
      At line 456 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 336 in file main.s
      At line 371 in file main.s
      At line 403 in file main.s

EXTI_PR2 40010434

Symbol: EXTI_PR2



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 462 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_PR2 unused
EXTI_RTSR1 40010408

Symbol: EXTI_RTSR1
   Definitions
      At line 453 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_RTSR1 unused
EXTI_RTSR2 40010428

Symbol: EXTI_RTSR2
   Definitions
      At line 459 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_RTSR2 unused
EXTI_SWIER1 40010410

Symbol: EXTI_SWIER1
   Definitions
      At line 455 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_SWIER1 unused
EXTI_SWIER2 40010430

Symbol: EXTI_SWIER2
   Definitions
      At line 461 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: EXTI_SWIER2 unused
FDCAN1_BASE 40006400

Symbol: FDCAN1_BASE
   Definitions
      At line 65 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FDCAN1_BASE unused
FDCAN2_BASE 40006800

Symbol: FDCAN2_BASE
   Definitions
      At line 67 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FDCAN2_BASE unused
FDCAN3_BASE 40006C00

Symbol: FDCAN3_BASE
   Definitions
      At line 68 in file STM32G4xx_REG_ASM.inc
   Uses



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

      None
Comment: FDCAN3_BASE unused
FDCAN_CONFIG_BASE 40006500

Symbol: FDCAN_CONFIG_BASE
   Definitions
      At line 66 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FDCAN_CONFIG_BASE unused
FLASHSIZE_BASE 1FFF75E0

Symbol: FLASHSIZE_BASE
   Definitions
      At line 202 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FLASHSIZE_BASE unused
FLASH_BASE 08000000

Symbol: FLASH_BASE
   Definitions
      At line 4 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FLASH_BASE unused
FLASH_R_BASE 40022000

Symbol: FLASH_R_BASE
   Definitions
      At line 124 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FLASH_R_BASE unused
FMAC_BASE 40021400

Symbol: FMAC_BASE
   Definitions
      At line 123 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMAC_BASE unused
FMC_BANK1 60000000

Symbol: FMC_BANK1
   Definitions
      At line 34 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 35 in file STM32G4xx_REG_ASM.inc
      At line 36 in file STM32G4xx_REG_ASM.inc
      At line 37 in file STM32G4xx_REG_ASM.inc
      At line 38 in file STM32G4xx_REG_ASM.inc

FMC_BANK1_1 60000000

Symbol: FMC_BANK1_1
   Definitions
      At line 35 in file STM32G4xx_REG_ASM.inc
   Uses



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols

      None
Comment: FMC_BANK1_1 unused
FMC_BANK1_2 64000000

Symbol: FMC_BANK1_2
   Definitions
      At line 36 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BANK1_2 unused
FMC_BANK1_3 68000000

Symbol: FMC_BANK1_3
   Definitions
      At line 37 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BANK1_3 unused
FMC_BANK1_4 6C000000

Symbol: FMC_BANK1_4
   Definitions
      At line 38 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BANK1_4 unused
FMC_BANK3 80000000

Symbol: FMC_BANK3
   Definitions
      At line 39 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BANK3 unused
FMC_BASE 60000000

Symbol: FMC_BASE
   Definitions
      At line 9 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 34 in file STM32G4xx_REG_ASM.inc
      At line 39 in file STM32G4xx_REG_ASM.inc

FMC_BCR1 A0000000

Symbol: FMC_BCR1
   Definitions
      At line 589 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BCR1 unused
FMC_BCR2 A0000008

Symbol: FMC_BCR2
   Definitions
      At line 590 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BCR2 unused



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols

FMC_BCR3 A0000010

Symbol: FMC_BCR3
   Definitions
      At line 591 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BCR3 unused
FMC_BCR4 A0000018

Symbol: FMC_BCR4
   Definitions
      At line 592 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BCR4 unused
FMC_BTR1 A0000004

Symbol: FMC_BTR1
   Definitions
      At line 593 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BTR1 unused
FMC_BTR2 A000000C

Symbol: FMC_BTR2
   Definitions
      At line 594 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BTR2 unused
FMC_BTR3 A0000014

Symbol: FMC_BTR3
   Definitions
      At line 595 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BTR3 unused
FMC_BTR4 A000001C

Symbol: FMC_BTR4
   Definitions
      At line 596 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BTR4 unused
FMC_BWTR1 A0000208

Symbol: FMC_BWTR1
   Definitions
      At line 599 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BWTR1 unused
FMC_BWTR2 A0000210

Symbol: FMC_BWTR2



ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 600 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BWTR2 unused
FMC_BWTR3 A0000218

Symbol: FMC_BWTR3
   Definitions
      At line 601 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BWTR3 unused
FMC_BWTR4 A0000220

Symbol: FMC_BWTR4
   Definitions
      At line 602 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_BWTR4 unused
FMC_Bank1E_R_BASE A0000104

Symbol: FMC_Bank1E_R_BASE
   Definitions
      At line 194 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 599 in file STM32G4xx_REG_ASM.inc
      At line 600 in file STM32G4xx_REG_ASM.inc
      At line 601 in file STM32G4xx_REG_ASM.inc
      At line 602 in file STM32G4xx_REG_ASM.inc

FMC_Bank1_R_BASE A0000000

Symbol: FMC_Bank1_R_BASE
   Definitions
      At line 193 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 589 in file STM32G4xx_REG_ASM.inc
      At line 590 in file STM32G4xx_REG_ASM.inc
      At line 591 in file STM32G4xx_REG_ASM.inc
      At line 592 in file STM32G4xx_REG_ASM.inc
      At line 593 in file STM32G4xx_REG_ASM.inc
      At line 594 in file STM32G4xx_REG_ASM.inc
      At line 595 in file STM32G4xx_REG_ASM.inc
      At line 596 in file STM32G4xx_REG_ASM.inc
      At line 597 in file STM32G4xx_REG_ASM.inc

FMC_Bank3_R_BASE A0000080

Symbol: FMC_Bank3_R_BASE
   Definitions
      At line 195 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_Bank3_R_BASE unused
FMC_PCSCNTR A0000020

Symbol: FMC_PCSCNTR



ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 597 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: FMC_PCSCNTR unused
FMC_R_BASE A0000000

Symbol: FMC_R_BASE
   Definitions
      At line 12 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 193 in file STM32G4xx_REG_ASM.inc
      At line 194 in file STM32G4xx_REG_ASM.inc
      At line 195 in file STM32G4xx_REG_ASM.inc

GPIOA_AFR0 48000020

Symbol: GPIOA_AFR0
   Definitions
      At line 336 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_AFR0 unused
GPIOA_AFR1 48000024

Symbol: GPIOA_AFR1
   Definitions
      At line 337 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_AFR1 unused
GPIOA_BASE 48000000

Symbol: GPIOA_BASE
   Definitions
      At line 170 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 328 in file STM32G4xx_REG_ASM.inc
      At line 329 in file STM32G4xx_REG_ASM.inc
      At line 330 in file STM32G4xx_REG_ASM.inc
      At line 331 in file STM32G4xx_REG_ASM.inc
      At line 332 in file STM32G4xx_REG_ASM.inc
      At line 333 in file STM32G4xx_REG_ASM.inc
      At line 334 in file STM32G4xx_REG_ASM.inc
      At line 335 in file STM32G4xx_REG_ASM.inc
      At line 336 in file STM32G4xx_REG_ASM.inc
      At line 337 in file STM32G4xx_REG_ASM.inc
      At line 338 in file STM32G4xx_REG_ASM.inc

GPIOA_BRR 48000028

Symbol: GPIOA_BRR
   Definitions
      At line 338 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_BRR unused
GPIOA_BSRR 48000018




ARM Macro Assembler    Page 20 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIOA_BSRR
   Definitions
      At line 334 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_BSRR unused
GPIOA_IDR 48000010

Symbol: GPIOA_IDR
   Definitions
      At line 332 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_IDR unused
GPIOA_LCKR 4800001C

Symbol: GPIOA_LCKR
   Definitions
      At line 335 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_LCKR unused
GPIOA_MODER 48000000

Symbol: GPIOA_MODER
   Definitions
      At line 328 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 71 in file main.s
Comment: GPIOA_MODER used once
GPIOA_ODR 48000014

Symbol: GPIOA_ODR
   Definitions
      At line 333 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 181 in file main.s
      At line 316 in file main.s

GPIOA_OSPEEDR 48000008

Symbol: GPIOA_OSPEEDR
   Definitions
      At line 330 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_OSPEEDR unused
GPIOA_OTYPER 48000004

Symbol: GPIOA_OTYPER
   Definitions
      At line 329 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_OTYPER unused
GPIOA_PUPDR 4800000C

Symbol: GPIOA_PUPDR
   Definitions



ARM Macro Assembler    Page 21 Alphabetic symbol ordering
Absolute symbols

      At line 331 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOA_PUPDR unused
GPIOB_AFR0 48000420

Symbol: GPIOB_AFR0
   Definitions
      At line 351 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_AFR0 unused
GPIOB_AFR1 48000424

Symbol: GPIOB_AFR1
   Definitions
      At line 352 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_AFR1 unused
GPIOB_BASE 48000400

Symbol: GPIOB_BASE
   Definitions
      At line 171 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 343 in file STM32G4xx_REG_ASM.inc
      At line 344 in file STM32G4xx_REG_ASM.inc
      At line 345 in file STM32G4xx_REG_ASM.inc
      At line 346 in file STM32G4xx_REG_ASM.inc
      At line 347 in file STM32G4xx_REG_ASM.inc
      At line 348 in file STM32G4xx_REG_ASM.inc
      At line 349 in file STM32G4xx_REG_ASM.inc
      At line 350 in file STM32G4xx_REG_ASM.inc
      At line 351 in file STM32G4xx_REG_ASM.inc
      At line 352 in file STM32G4xx_REG_ASM.inc
      At line 353 in file STM32G4xx_REG_ASM.inc

GPIOB_BRR 48000428

Symbol: GPIOB_BRR
   Definitions
      At line 353 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_BRR unused
GPIOB_BSRR 48000418

Symbol: GPIOB_BSRR
   Definitions
      At line 349 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_BSRR unused
GPIOB_IDR 48000410

Symbol: GPIOB_IDR
   Definitions
      At line 347 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 22 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIOB_IDR unused
GPIOB_LCKR 4800041C

Symbol: GPIOB_LCKR
   Definitions
      At line 350 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_LCKR unused
GPIOB_MODER 48000400

Symbol: GPIOB_MODER
   Definitions
      At line 343 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_MODER unused
GPIOB_ODR 48000414

Symbol: GPIOB_ODR
   Definitions
      At line 348 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_ODR unused
GPIOB_OSPEEDR 48000408

Symbol: GPIOB_OSPEEDR
   Definitions
      At line 345 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_OSPEEDR unused
GPIOB_OTYPER 48000404

Symbol: GPIOB_OTYPER
   Definitions
      At line 344 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_OTYPER unused
GPIOB_PUPDR 4800040C

Symbol: GPIOB_PUPDR
   Definitions
      At line 346 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOB_PUPDR unused
GPIOC_AFR0 48000820

Symbol: GPIOC_AFR0
   Definitions
      At line 367 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_AFR0 unused



ARM Macro Assembler    Page 23 Alphabetic symbol ordering
Absolute symbols

GPIOC_AFR1 48000824

Symbol: GPIOC_AFR1
   Definitions
      At line 368 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_AFR1 unused
GPIOC_BASE 48000800

Symbol: GPIOC_BASE
   Definitions
      At line 172 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 359 in file STM32G4xx_REG_ASM.inc
      At line 360 in file STM32G4xx_REG_ASM.inc
      At line 361 in file STM32G4xx_REG_ASM.inc
      At line 362 in file STM32G4xx_REG_ASM.inc
      At line 363 in file STM32G4xx_REG_ASM.inc
      At line 364 in file STM32G4xx_REG_ASM.inc
      At line 365 in file STM32G4xx_REG_ASM.inc
      At line 366 in file STM32G4xx_REG_ASM.inc
      At line 367 in file STM32G4xx_REG_ASM.inc
      At line 368 in file STM32G4xx_REG_ASM.inc
      At line 369 in file STM32G4xx_REG_ASM.inc

GPIOC_BRR 48000828

Symbol: GPIOC_BRR
   Definitions
      At line 369 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_BRR unused
GPIOC_BSRR 48000818

Symbol: GPIOC_BSRR
   Definitions
      At line 365 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_BSRR unused
GPIOC_IDR 48000810

Symbol: GPIOC_IDR
   Definitions
      At line 363 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 358 in file main.s
      At line 392 in file main.s

GPIOC_LCKR 4800081C

Symbol: GPIOC_LCKR
   Definitions
      At line 366 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_LCKR unused



ARM Macro Assembler    Page 24 Alphabetic symbol ordering
Absolute symbols

GPIOC_MODER 48000800

Symbol: GPIOC_MODER
   Definitions
      At line 359 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 82 in file main.s
Comment: GPIOC_MODER used once
GPIOC_ODR 48000814

Symbol: GPIOC_ODR
   Definitions
      At line 364 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_ODR unused
GPIOC_OSPEEDR 48000808

Symbol: GPIOC_OSPEEDR
   Definitions
      At line 361 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_OSPEEDR unused
GPIOC_OTYPER 48000804

Symbol: GPIOC_OTYPER
   Definitions
      At line 360 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_OTYPER unused
GPIOC_PUPDR 4800080C

Symbol: GPIOC_PUPDR
   Definitions
      At line 362 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOC_PUPDR unused
GPIOD_AFR0 48000C20

Symbol: GPIOD_AFR0
   Definitions
      At line 382 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_AFR0 unused
GPIOD_AFR1 48000C24

Symbol: GPIOD_AFR1
   Definitions
      At line 383 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_AFR1 unused
GPIOD_BASE 48000C00

Symbol: GPIOD_BASE



ARM Macro Assembler    Page 25 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 173 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 374 in file STM32G4xx_REG_ASM.inc
      At line 375 in file STM32G4xx_REG_ASM.inc
      At line 376 in file STM32G4xx_REG_ASM.inc
      At line 377 in file STM32G4xx_REG_ASM.inc
      At line 378 in file STM32G4xx_REG_ASM.inc
      At line 379 in file STM32G4xx_REG_ASM.inc
      At line 380 in file STM32G4xx_REG_ASM.inc
      At line 381 in file STM32G4xx_REG_ASM.inc
      At line 382 in file STM32G4xx_REG_ASM.inc
      At line 383 in file STM32G4xx_REG_ASM.inc
      At line 384 in file STM32G4xx_REG_ASM.inc

GPIOD_BRR 48000C28

Symbol: GPIOD_BRR
   Definitions
      At line 384 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_BRR unused
GPIOD_BSRR 48000C18

Symbol: GPIOD_BSRR
   Definitions
      At line 380 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_BSRR unused
GPIOD_IDR 48000C10

Symbol: GPIOD_IDR
   Definitions
      At line 378 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_IDR unused
GPIOD_LCKR 48000C1C

Symbol: GPIOD_LCKR
   Definitions
      At line 381 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_LCKR unused
GPIOD_MODER 48000C00

Symbol: GPIOD_MODER
   Definitions
      At line 374 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_MODER unused
GPIOD_ODR 48000C14

Symbol: GPIOD_ODR
   Definitions



ARM Macro Assembler    Page 26 Alphabetic symbol ordering
Absolute symbols

      At line 379 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_ODR unused
GPIOD_OSPEEDR 48000C08

Symbol: GPIOD_OSPEEDR
   Definitions
      At line 376 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_OSPEEDR unused
GPIOD_OTYPER 48000C04

Symbol: GPIOD_OTYPER
   Definitions
      At line 375 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_OTYPER unused
GPIOD_PUPDR 48000C0C

Symbol: GPIOD_PUPDR
   Definitions
      At line 377 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOD_PUPDR unused
GPIOE_AFR0 48001020

Symbol: GPIOE_AFR0
   Definitions
      At line 398 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_AFR0 unused
GPIOE_AFR1 48001024

Symbol: GPIOE_AFR1
   Definitions
      At line 399 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_AFR1 unused
GPIOE_BASE 48001000

Symbol: GPIOE_BASE
   Definitions
      At line 174 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 390 in file STM32G4xx_REG_ASM.inc
      At line 391 in file STM32G4xx_REG_ASM.inc
      At line 392 in file STM32G4xx_REG_ASM.inc
      At line 393 in file STM32G4xx_REG_ASM.inc
      At line 394 in file STM32G4xx_REG_ASM.inc
      At line 395 in file STM32G4xx_REG_ASM.inc
      At line 396 in file STM32G4xx_REG_ASM.inc
      At line 397 in file STM32G4xx_REG_ASM.inc
      At line 398 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 27 Alphabetic symbol ordering
Absolute symbols

      At line 399 in file STM32G4xx_REG_ASM.inc
      At line 400 in file STM32G4xx_REG_ASM.inc

GPIOE_BRR 48001028

Symbol: GPIOE_BRR
   Definitions
      At line 400 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_BRR unused
GPIOE_BSRR 48001018

Symbol: GPIOE_BSRR
   Definitions
      At line 396 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_BSRR unused
GPIOE_IDR 48001010

Symbol: GPIOE_IDR
   Definitions
      At line 394 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_IDR unused
GPIOE_LCKR 4800101C

Symbol: GPIOE_LCKR
   Definitions
      At line 397 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_LCKR unused
GPIOE_MODER 48001000

Symbol: GPIOE_MODER
   Definitions
      At line 390 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_MODER unused
GPIOE_ODR 48001014

Symbol: GPIOE_ODR
   Definitions
      At line 395 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_ODR unused
GPIOE_OSPEEDR 48001008

Symbol: GPIOE_OSPEEDR
   Definitions
      At line 392 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_OSPEEDR unused



ARM Macro Assembler    Page 28 Alphabetic symbol ordering
Absolute symbols

GPIOE_OTYPER 48001004

Symbol: GPIOE_OTYPER
   Definitions
      At line 391 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_OTYPER unused
GPIOE_PUPDR 4800100C

Symbol: GPIOE_PUPDR
   Definitions
      At line 393 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOE_PUPDR unused
GPIOF_AFR0 48001420

Symbol: GPIOF_AFR0
   Definitions
      At line 414 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_AFR0 unused
GPIOF_AFR1 48001424

Symbol: GPIOF_AFR1
   Definitions
      At line 415 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_AFR1 unused
GPIOF_BASE 48001400

Symbol: GPIOF_BASE
   Definitions
      At line 175 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 406 in file STM32G4xx_REG_ASM.inc
      At line 407 in file STM32G4xx_REG_ASM.inc
      At line 408 in file STM32G4xx_REG_ASM.inc
      At line 409 in file STM32G4xx_REG_ASM.inc
      At line 410 in file STM32G4xx_REG_ASM.inc
      At line 411 in file STM32G4xx_REG_ASM.inc
      At line 412 in file STM32G4xx_REG_ASM.inc
      At line 413 in file STM32G4xx_REG_ASM.inc
      At line 414 in file STM32G4xx_REG_ASM.inc
      At line 415 in file STM32G4xx_REG_ASM.inc
      At line 416 in file STM32G4xx_REG_ASM.inc

GPIOF_BRR 48001428

Symbol: GPIOF_BRR
   Definitions
      At line 416 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_BRR unused
GPIOF_BSRR 48001418



ARM Macro Assembler    Page 29 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIOF_BSRR
   Definitions
      At line 412 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_BSRR unused
GPIOF_IDR 48001410

Symbol: GPIOF_IDR
   Definitions
      At line 410 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_IDR unused
GPIOF_LCKR 4800141C

Symbol: GPIOF_LCKR
   Definitions
      At line 413 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_LCKR unused
GPIOF_MODER 48001400

Symbol: GPIOF_MODER
   Definitions
      At line 406 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_MODER unused
GPIOF_ODR 48001414

Symbol: GPIOF_ODR
   Definitions
      At line 411 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_ODR unused
GPIOF_OSPEEDR 48001408

Symbol: GPIOF_OSPEEDR
   Definitions
      At line 408 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_OSPEEDR unused
GPIOF_OTYPER 48001404

Symbol: GPIOF_OTYPER
   Definitions
      At line 407 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_OTYPER unused
GPIOF_PUPDR 4800140C

Symbol: GPIOF_PUPDR
   Definitions



ARM Macro Assembler    Page 30 Alphabetic symbol ordering
Absolute symbols

      At line 409 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOF_PUPDR unused
GPIOG_AFR0 48001820

Symbol: GPIOG_AFR0
   Definitions
      At line 429 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_AFR0 unused
GPIOG_AFR1 48001824

Symbol: GPIOG_AFR1
   Definitions
      At line 430 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_AFR1 unused
GPIOG_BASE 48001800

Symbol: GPIOG_BASE
   Definitions
      At line 176 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 421 in file STM32G4xx_REG_ASM.inc
      At line 422 in file STM32G4xx_REG_ASM.inc
      At line 423 in file STM32G4xx_REG_ASM.inc
      At line 424 in file STM32G4xx_REG_ASM.inc
      At line 425 in file STM32G4xx_REG_ASM.inc
      At line 426 in file STM32G4xx_REG_ASM.inc
      At line 427 in file STM32G4xx_REG_ASM.inc
      At line 428 in file STM32G4xx_REG_ASM.inc
      At line 429 in file STM32G4xx_REG_ASM.inc
      At line 430 in file STM32G4xx_REG_ASM.inc
      At line 431 in file STM32G4xx_REG_ASM.inc

GPIOG_BRR 48001828

Symbol: GPIOG_BRR
   Definitions
      At line 431 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_BRR unused
GPIOG_BSRR 48001818

Symbol: GPIOG_BSRR
   Definitions
      At line 427 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_BSRR unused
GPIOG_IDR 48001810

Symbol: GPIOG_IDR
   Definitions
      At line 425 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 31 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIOG_IDR unused
GPIOG_LCKR 4800181C

Symbol: GPIOG_LCKR
   Definitions
      At line 428 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_LCKR unused
GPIOG_MODER 48001800

Symbol: GPIOG_MODER
   Definitions
      At line 421 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_MODER unused
GPIOG_ODR 48001814

Symbol: GPIOG_ODR
   Definitions
      At line 426 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_ODR unused
GPIOG_OSPEEDR 48001808

Symbol: GPIOG_OSPEEDR
   Definitions
      At line 423 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_OSPEEDR unused
GPIOG_OTYPER 48001804

Symbol: GPIOG_OTYPER
   Definitions
      At line 422 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_OTYPER unused
GPIOG_PUPDR 4800180C

Symbol: GPIOG_PUPDR
   Definitions
      At line 424 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: GPIOG_PUPDR unused
HRTIM1_BASE 40016800

Symbol: HRTIM1_BASE
   Definitions
      At line 108 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 109 in file STM32G4xx_REG_ASM.inc
      At line 110 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 32 Alphabetic symbol ordering
Absolute symbols

      At line 111 in file STM32G4xx_REG_ASM.inc
      At line 112 in file STM32G4xx_REG_ASM.inc
      At line 113 in file STM32G4xx_REG_ASM.inc
      At line 114 in file STM32G4xx_REG_ASM.inc
      At line 115 in file STM32G4xx_REG_ASM.inc

HRTIM1_COMMON_BASE 40016B80

Symbol: HRTIM1_COMMON_BASE
   Definitions
      At line 115 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: HRTIM1_COMMON_BASE unused
HRTIM1_TIMA_BASE 40016880

Symbol: HRTIM1_TIMA_BASE
   Definitions
      At line 109 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: HRTIM1_TIMA_BASE unused
HRTIM1_TIMB_BASE 40016900

Symbol: HRTIM1_TIMB_BASE
   Definitions
      At line 110 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: HRTIM1_TIMB_BASE unused
HRTIM1_TIMC_BASE 40016980

Symbol: HRTIM1_TIMC_BASE
   Definitions
      At line 111 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: HRTIM1_TIMC_BASE unused
HRTIM1_TIMD_BASE 40016A00

Symbol: HRTIM1_TIMD_BASE
   Definitions
      At line 112 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: HRTIM1_TIMD_BASE unused
HRTIM1_TIME_BASE 40016A80

Symbol: HRTIM1_TIME_BASE
   Definitions
      At line 113 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: HRTIM1_TIME_BASE unused
HRTIM1_TIMF_BASE 40016B00

Symbol: HRTIM1_TIMF_BASE
   Definitions
      At line 114 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 33 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: HRTIM1_TIMF_BASE unused
I2C1_BASE 40005400

Symbol: I2C1_BASE
   Definitions
      At line 61 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: I2C1_BASE unused
I2C2_BASE 40005800

Symbol: I2C2_BASE
   Definitions
      At line 62 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: I2C2_BASE unused
I2C3_BASE 40007800

Symbol: I2C3_BASE
   Definitions
      At line 70 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: I2C3_BASE unused
I2C4_BASE 40008400

Symbol: I2C4_BASE
   Definitions
      At line 73 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: I2C4_BASE unused
IWDG_BASE 40003000

Symbol: IWDG_BASE
   Definitions
      At line 54 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: IWDG_BASE unused
LPTIM1_BASE 40007C00

Symbol: LPTIM1_BASE
   Definitions
      At line 71 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: LPTIM1_BASE unused
LPUART1_BASE 40008000

Symbol: LPUART1_BASE
   Definitions
      At line 72 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: LPUART1_BASE unused



ARM Macro Assembler    Page 34 Alphabetic symbol ordering
Absolute symbols

NVIC_BASE E000E100

Symbol: NVIC_BASE
   Definitions
      At line 41 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 607 in file STM32G4xx_REG_ASM.inc
      At line 608 in file STM32G4xx_REG_ASM.inc
      At line 609 in file STM32G4xx_REG_ASM.inc
      At line 610 in file STM32G4xx_REG_ASM.inc
      At line 611 in file STM32G4xx_REG_ASM.inc
      At line 612 in file STM32G4xx_REG_ASM.inc
      At line 613 in file STM32G4xx_REG_ASM.inc
      At line 614 in file STM32G4xx_REG_ASM.inc
      At line 617 in file STM32G4xx_REG_ASM.inc
      At line 618 in file STM32G4xx_REG_ASM.inc
      At line 619 in file STM32G4xx_REG_ASM.inc
      At line 620 in file STM32G4xx_REG_ASM.inc
      At line 621 in file STM32G4xx_REG_ASM.inc
      At line 622 in file STM32G4xx_REG_ASM.inc
      At line 623 in file STM32G4xx_REG_ASM.inc
      At line 624 in file STM32G4xx_REG_ASM.inc
      At line 626 in file STM32G4xx_REG_ASM.inc
      At line 627 in file STM32G4xx_REG_ASM.inc
      At line 628 in file STM32G4xx_REG_ASM.inc
      At line 629 in file STM32G4xx_REG_ASM.inc
      At line 630 in file STM32G4xx_REG_ASM.inc
      At line 631 in file STM32G4xx_REG_ASM.inc
      At line 632 in file STM32G4xx_REG_ASM.inc
      At line 633 in file STM32G4xx_REG_ASM.inc
      At line 635 in file STM32G4xx_REG_ASM.inc
      At line 636 in file STM32G4xx_REG_ASM.inc
      At line 637 in file STM32G4xx_REG_ASM.inc
      At line 638 in file STM32G4xx_REG_ASM.inc
      At line 639 in file STM32G4xx_REG_ASM.inc
      At line 640 in file STM32G4xx_REG_ASM.inc
      At line 641 in file STM32G4xx_REG_ASM.inc
      At line 642 in file STM32G4xx_REG_ASM.inc
      At line 645 in file STM32G4xx_REG_ASM.inc
      At line 646 in file STM32G4xx_REG_ASM.inc
      At line 647 in file STM32G4xx_REG_ASM.inc
      At line 648 in file STM32G4xx_REG_ASM.inc
      At line 649 in file STM32G4xx_REG_ASM.inc
      At line 650 in file STM32G4xx_REG_ASM.inc
      At line 651 in file STM32G4xx_REG_ASM.inc
      At line 652 in file STM32G4xx_REG_ASM.inc
      At line 654 in file STM32G4xx_REG_ASM.inc

NVIC_IABR0 E000E300

Symbol: NVIC_IABR0
   Definitions
      At line 645 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR0 unused
NVIC_IABR1 E000E304

Symbol: NVIC_IABR1



ARM Macro Assembler    Page 35 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 646 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR1 unused
NVIC_IABR2 E000E308

Symbol: NVIC_IABR2
   Definitions
      At line 647 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR2 unused
NVIC_IABR3 E000E30C

Symbol: NVIC_IABR3
   Definitions
      At line 648 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR3 unused
NVIC_IABR4 E000E310

Symbol: NVIC_IABR4
   Definitions
      At line 649 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR4 unused
NVIC_IABR5 E000E314

Symbol: NVIC_IABR5
   Definitions
      At line 650 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR5 unused
NVIC_IABR6 E000E318

Symbol: NVIC_IABR6
   Definitions
      At line 651 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR6 unused
NVIC_IABR7 E000E31C

Symbol: NVIC_IABR7
   Definitions
      At line 652 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IABR7 unused
NVIC_ICER0 E000E180

Symbol: NVIC_ICER0
   Definitions
      At line 617 in file STM32G4xx_REG_ASM.inc
   Uses



ARM Macro Assembler    Page 36 Alphabetic symbol ordering
Absolute symbols

      None
Comment: NVIC_ICER0 unused
NVIC_ICER1 E000E184

Symbol: NVIC_ICER1
   Definitions
      At line 618 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER1 unused
NVIC_ICER2 E000E188

Symbol: NVIC_ICER2
   Definitions
      At line 619 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER2 unused
NVIC_ICER3 E000E18C

Symbol: NVIC_ICER3
   Definitions
      At line 620 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER3 unused
NVIC_ICER4 E000E190

Symbol: NVIC_ICER4
   Definitions
      At line 621 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER4 unused
NVIC_ICER5 E000E194

Symbol: NVIC_ICER5
   Definitions
      At line 622 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER5 unused
NVIC_ICER6 E000E198

Symbol: NVIC_ICER6
   Definitions
      At line 623 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER6 unused
NVIC_ICER7 E000E19C

Symbol: NVIC_ICER7
   Definitions
      At line 624 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICER7 unused
NVIC_ICPR0 E000E280



ARM Macro Assembler    Page 37 Alphabetic symbol ordering
Absolute symbols


Symbol: NVIC_ICPR0
   Definitions
      At line 635 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 120 in file main.s
Comment: NVIC_ICPR0 used once
NVIC_ICPR1 E000E284

Symbol: NVIC_ICPR1
   Definitions
      At line 636 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 155 in file main.s
Comment: NVIC_ICPR1 used once
NVIC_ICPR2 E000E288

Symbol: NVIC_ICPR2
   Definitions
      At line 637 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICPR2 unused
NVIC_ICPR3 E000E28C

Symbol: NVIC_ICPR3
   Definitions
      At line 638 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICPR3 unused
NVIC_ICPR4 E000E290

Symbol: NVIC_ICPR4
   Definitions
      At line 639 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICPR4 unused
NVIC_ICPR5 E000E294

Symbol: NVIC_ICPR5
   Definitions
      At line 640 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICPR5 unused
NVIC_ICPR6 E000E298

Symbol: NVIC_ICPR6
   Definitions
      At line 641 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICPR6 unused
NVIC_ICPR7 E000E29C

Symbol: NVIC_ICPR7
   Definitions



ARM Macro Assembler    Page 38 Alphabetic symbol ordering
Absolute symbols

      At line 642 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ICPR7 unused
NVIC_IPR0 E000E400

Symbol: NVIC_IPR0
   Definitions
      At line 654 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_IPR0 unused
NVIC_ISER0 E000E100

Symbol: NVIC_ISER0
   Definitions
      At line 607 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 124 in file main.s
Comment: NVIC_ISER0 used once
NVIC_ISER1 E000E104

Symbol: NVIC_ISER1
   Definitions
      At line 608 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 158 in file main.s
Comment: NVIC_ISER1 used once
NVIC_ISER2 E000E108

Symbol: NVIC_ISER2
   Definitions
      At line 609 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISER2 unused
NVIC_ISER3 E000E10C

Symbol: NVIC_ISER3
   Definitions
      At line 610 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISER3 unused
NVIC_ISER4 E000E110

Symbol: NVIC_ISER4
   Definitions
      At line 611 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISER4 unused
NVIC_ISER5 E000E114

Symbol: NVIC_ISER5
   Definitions
      At line 612 in file STM32G4xx_REG_ASM.inc
   Uses
      None



ARM Macro Assembler    Page 39 Alphabetic symbol ordering
Absolute symbols

Comment: NVIC_ISER5 unused
NVIC_ISER6 E000E118

Symbol: NVIC_ISER6
   Definitions
      At line 613 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISER6 unused
NVIC_ISER7 E000E11C

Symbol: NVIC_ISER7
   Definitions
      At line 614 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISER7 unused
NVIC_ISPR0 E000E200

Symbol: NVIC_ISPR0
   Definitions
      At line 626 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR0 unused
NVIC_ISPR1 E000E204

Symbol: NVIC_ISPR1
   Definitions
      At line 627 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR1 unused
NVIC_ISPR2 E000E208

Symbol: NVIC_ISPR2
   Definitions
      At line 628 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR2 unused
NVIC_ISPR3 E000E20C

Symbol: NVIC_ISPR3
   Definitions
      At line 629 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR3 unused
NVIC_ISPR4 E000E210

Symbol: NVIC_ISPR4
   Definitions
      At line 630 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR4 unused
NVIC_ISPR5 E000E214




ARM Macro Assembler    Page 40 Alphabetic symbol ordering
Absolute symbols

Symbol: NVIC_ISPR5
   Definitions
      At line 631 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR5 unused
NVIC_ISPR6 E000E218

Symbol: NVIC_ISPR6
   Definitions
      At line 632 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR6 unused
NVIC_ISPR7 E000E21C

Symbol: NVIC_ISPR7
   Definitions
      At line 633 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: NVIC_ISPR7 unused
OPAMP1_BASE 40010300

Symbol: OPAMP1_BASE
   Definitions
      At line 88 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: OPAMP1_BASE unused
OPAMP2_BASE 40010304

Symbol: OPAMP2_BASE
   Definitions
      At line 89 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: OPAMP2_BASE unused
OPAMP3_BASE 40010308

Symbol: OPAMP3_BASE
   Definitions
      At line 90 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: OPAMP3_BASE unused
OPAMP4_BASE 4001030C

Symbol: OPAMP4_BASE
   Definitions
      At line 91 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: OPAMP4_BASE unused
OPAMP5_BASE 40010310

Symbol: OPAMP5_BASE
   Definitions
      At line 92 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 41 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: OPAMP5_BASE unused
OPAMP6_BASE 40010314

Symbol: OPAMP6_BASE
   Definitions
      At line 93 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: OPAMP6_BASE unused
OPAMP_BASE 40010300

Symbol: OPAMP_BASE
   Definitions
      At line 87 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: OPAMP_BASE unused
PACKAGE_BASE 1FFF7500

Symbol: PACKAGE_BASE
   Definitions
      At line 200 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: PACKAGE_BASE unused
PERIPH_BASE 40000000

Symbol: PERIPH_BASE
   Definitions
      At line 8 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 29 in file STM32G4xx_REG_ASM.inc
      At line 30 in file STM32G4xx_REG_ASM.inc
      At line 31 in file STM32G4xx_REG_ASM.inc
      At line 32 in file STM32G4xx_REG_ASM.inc

PERIPH_BB_BASE 42000000

Symbol: PERIPH_BB_BASE
   Definitions
      At line 17 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: PERIPH_BB_BASE unused
PWR_BASE 40007000

Symbol: PWR_BASE
   Definitions
      At line 69 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: PWR_BASE unused
QSPI_BASE 90000000

Symbol: QSPI_BASE
   Definitions
      At line 10 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 42 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: QSPI_BASE unused
QSPI_R_BASE A0001000

Symbol: QSPI_R_BASE
   Definitions
      At line 13 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: QSPI_R_BASE unused
RCC_AHB1ENR 40021048

Symbol: RCC_AHB1ENR
   Definitions
      At line 301 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB1ENR unused
RCC_AHB1RSTR 40021028

Symbol: RCC_AHB1RSTR
   Definitions
      At line 295 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB1RSTR unused
RCC_AHB1SMENR 40021068

Symbol: RCC_AHB1SMENR
   Definitions
      At line 307 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB1SMENR unused
RCC_AHB2ENR 4002104C

Symbol: RCC_AHB2ENR
   Definitions
      At line 302 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 67 in file main.s
Comment: RCC_AHB2ENR used once
RCC_AHB2RSTR 4002102C

Symbol: RCC_AHB2RSTR
   Definitions
      At line 296 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB2RSTR unused
RCC_AHB2SMENR 4002106C

Symbol: RCC_AHB2SMENR
   Definitions
      At line 308 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB2SMENR unused



ARM Macro Assembler    Page 43 Alphabetic symbol ordering
Absolute symbols

RCC_AHB3ENR 40021050

Symbol: RCC_AHB3ENR
   Definitions
      At line 303 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB3ENR unused
RCC_AHB3RSTR 40021030

Symbol: RCC_AHB3RSTR
   Definitions
      At line 297 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB3RSTR unused
RCC_AHB3SMENR 40021070

Symbol: RCC_AHB3SMENR
   Definitions
      At line 309 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_AHB3SMENR unused
RCC_APB1ENR1 40021058

Symbol: RCC_APB1ENR1
   Definitions
      At line 304 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 137 in file main.s
Comment: RCC_APB1ENR1 used once
RCC_APB1ENR2 4002105C

Symbol: RCC_APB1ENR2
   Definitions
      At line 305 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB1ENR2 unused
RCC_APB1RSTR1 40021038

Symbol: RCC_APB1RSTR1
   Definitions
      At line 298 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB1RSTR1 unused
RCC_APB1RSTR2 4002103C

Symbol: RCC_APB1RSTR2
   Definitions
      At line 299 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB1RSTR2 unused
RCC_APB1SMENR1 40021078

Symbol: RCC_APB1SMENR1



ARM Macro Assembler    Page 44 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 310 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB1SMENR1 unused
RCC_APB1SMENR2 4002107C

Symbol: RCC_APB1SMENR2
   Definitions
      At line 311 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB1SMENR2 unused
RCC_APB2ENR 40021060

Symbol: RCC_APB2ENR
   Definitions
      At line 306 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 92 in file main.s
Comment: RCC_APB2ENR used once
RCC_APB2RSTR 40021040

Symbol: RCC_APB2RSTR
   Definitions
      At line 300 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB2RSTR unused
RCC_APB2SMENR 40021080

Symbol: RCC_APB2SMENR
   Definitions
      At line 312 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_APB2SMENR unused
RCC_BASE 40021000

Symbol: RCC_BASE
   Definitions
      At line 122 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 288 in file STM32G4xx_REG_ASM.inc
      At line 289 in file STM32G4xx_REG_ASM.inc
      At line 290 in file STM32G4xx_REG_ASM.inc
      At line 291 in file STM32G4xx_REG_ASM.inc
      At line 292 in file STM32G4xx_REG_ASM.inc
      At line 293 in file STM32G4xx_REG_ASM.inc
      At line 294 in file STM32G4xx_REG_ASM.inc
      At line 295 in file STM32G4xx_REG_ASM.inc
      At line 296 in file STM32G4xx_REG_ASM.inc
      At line 297 in file STM32G4xx_REG_ASM.inc
      At line 298 in file STM32G4xx_REG_ASM.inc
      At line 299 in file STM32G4xx_REG_ASM.inc
      At line 300 in file STM32G4xx_REG_ASM.inc
      At line 301 in file STM32G4xx_REG_ASM.inc
      At line 302 in file STM32G4xx_REG_ASM.inc
      At line 303 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 45 Alphabetic symbol ordering
Absolute symbols

      At line 304 in file STM32G4xx_REG_ASM.inc
      At line 305 in file STM32G4xx_REG_ASM.inc
      At line 306 in file STM32G4xx_REG_ASM.inc
      At line 307 in file STM32G4xx_REG_ASM.inc
      At line 308 in file STM32G4xx_REG_ASM.inc
      At line 309 in file STM32G4xx_REG_ASM.inc
      At line 310 in file STM32G4xx_REG_ASM.inc
      At line 311 in file STM32G4xx_REG_ASM.inc
      At line 312 in file STM32G4xx_REG_ASM.inc
      At line 313 in file STM32G4xx_REG_ASM.inc
      At line 314 in file STM32G4xx_REG_ASM.inc
      At line 315 in file STM32G4xx_REG_ASM.inc
      At line 316 in file STM32G4xx_REG_ASM.inc
      At line 317 in file STM32G4xx_REG_ASM.inc

RCC_BDCR 40021090

Symbol: RCC_BDCR
   Definitions
      At line 314 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_BDCR unused
RCC_CCIPR 40021088

Symbol: RCC_CCIPR
   Definitions
      At line 313 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CCIPR unused
RCC_CCIPR2 4002109C

Symbol: RCC_CCIPR2
   Definitions
      At line 317 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CCIPR2 unused
RCC_CFGR 40021008

Symbol: RCC_CFGR
   Definitions
      At line 290 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CFGR unused
RCC_CICR 40021020

Symbol: RCC_CICR
   Definitions
      At line 294 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CICR unused
RCC_CIER 40021018

Symbol: RCC_CIER
   Definitions



ARM Macro Assembler    Page 46 Alphabetic symbol ordering
Absolute symbols

      At line 292 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CIER unused
RCC_CIFR 4002101C

Symbol: RCC_CIFR
   Definitions
      At line 293 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CIFR unused
RCC_CR 40021000

Symbol: RCC_CR
   Definitions
      At line 288 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CR unused
RCC_CRRCR 40021098

Symbol: RCC_CRRCR
   Definitions
      At line 316 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CRRCR unused
RCC_CSR 40021094

Symbol: RCC_CSR
   Definitions
      At line 315 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_CSR unused
RCC_ICSCR 40021004

Symbol: RCC_ICSCR
   Definitions
      At line 289 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_ICSCR unused
RCC_PLLCFGR 4002100C

Symbol: RCC_PLLCFGR
   Definitions
      At line 291 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RCC_PLLCFGR unused
RNG_BASE 50060800

Symbol: RNG_BASE
   Definitions
      At line 196 in file STM32G4xx_REG_ASM.inc
   Uses
      None



ARM Macro Assembler    Page 47 Alphabetic symbol ordering
Absolute symbols

Comment: RNG_BASE unused
RTC_BASE 40002800

Symbol: RTC_BASE
   Definitions
      At line 52 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: RTC_BASE unused
SAI1_BASE 40015400

Symbol: SAI1_BASE
   Definitions
      At line 105 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 106 in file STM32G4xx_REG_ASM.inc
      At line 107 in file STM32G4xx_REG_ASM.inc

SAI1_Block_A_BASE 40015404

Symbol: SAI1_Block_A_BASE
   Definitions
      At line 106 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SAI1_Block_A_BASE unused
SAI1_Block_B_BASE 40015424

Symbol: SAI1_Block_B_BASE
   Definitions
      At line 107 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SAI1_Block_B_BASE unused
SCS_BASE E000E000

Symbol: SCS_BASE
   Definitions
      At line 18 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 41 in file STM32G4xx_REG_ASM.inc
Comment: SCS_BASE used once
SPI1_BASE 40013000

Symbol: SPI1_BASE
   Definitions
      At line 97 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SPI1_BASE unused
SPI2_BASE 40003800

Symbol: SPI2_BASE
   Definitions
      At line 55 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SPI2_BASE unused
SPI3_BASE 40003C00



ARM Macro Assembler    Page 48 Alphabetic symbol ordering
Absolute symbols


Symbol: SPI3_BASE
   Definitions
      At line 56 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SPI3_BASE unused
SPI4_BASE 40013C00

Symbol: SPI4_BASE
   Definitions
      At line 100 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SPI4_BASE unused
SRAM1_BASE 20000000

Symbol: SRAM1_BASE
   Definitions
      At line 5 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 21 in file STM32G4xx_REG_ASM.inc
Comment: SRAM1_BASE used once
SRAM1_BB_BASE 22000000

Symbol: SRAM1_BB_BASE
   Definitions
      At line 14 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 22 in file STM32G4xx_REG_ASM.inc
Comment: SRAM1_BB_BASE used once
SRAM1_SIZE_MAX 00014000

Symbol: SRAM1_SIZE_MAX
   Definitions
      At line 24 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAM1_SIZE_MAX unused
SRAM2_BASE 20014000

Symbol: SRAM2_BASE
   Definitions
      At line 6 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAM2_BASE unused
SRAM2_BB_BASE 22280000

Symbol: SRAM2_BB_BASE
   Definitions
      At line 15 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAM2_BB_BASE unused
SRAM2_SIZE 00004000

Symbol: SRAM2_SIZE
   Definitions



ARM Macro Assembler    Page 49 Alphabetic symbol ordering
Absolute symbols

      At line 25 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAM2_SIZE unused
SRAMCAN_BASE 4000A400

Symbol: SRAMCAN_BASE
   Definitions
      At line 75 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAMCAN_BASE unused
SRAM_BASE 20000000

Symbol: SRAM_BASE
   Definitions
      At line 21 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAM_BASE unused
SRAM_BB_BASE 22000000

Symbol: SRAM_BB_BASE
   Definitions
      At line 22 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SRAM_BB_BASE unused
SYSCFG_BASE 40010000

Symbol: SYSCFG_BASE
   Definitions
      At line 78 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 437 in file STM32G4xx_REG_ASM.inc
      At line 438 in file STM32G4xx_REG_ASM.inc
      At line 439 in file STM32G4xx_REG_ASM.inc
      At line 440 in file STM32G4xx_REG_ASM.inc
      At line 441 in file STM32G4xx_REG_ASM.inc
      At line 442 in file STM32G4xx_REG_ASM.inc
      At line 443 in file STM32G4xx_REG_ASM.inc
      At line 444 in file STM32G4xx_REG_ASM.inc
      At line 445 in file STM32G4xx_REG_ASM.inc
      At line 446 in file STM32G4xx_REG_ASM.inc

SYSCFG_CFGR1 40010004

Symbol: SYSCFG_CFGR1
   Definitions
      At line 438 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_CFGR1 unused
SYSCFG_CFGR2 4001001C

Symbol: SYSCFG_CFGR2
   Definitions
      At line 444 in file STM32G4xx_REG_ASM.inc
   Uses



ARM Macro Assembler    Page 50 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SYSCFG_CFGR2 unused
SYSCFG_EXTICR1 40010008

Symbol: SYSCFG_EXTICR1
   Definitions
      At line 439 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 98 in file main.s
Comment: SYSCFG_EXTICR1 used once
SYSCFG_EXTICR2 4001000C

Symbol: SYSCFG_EXTICR2
   Definitions
      At line 440 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_EXTICR2 unused
SYSCFG_EXTICR3 40010010

Symbol: SYSCFG_EXTICR3
   Definitions
      At line 441 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_EXTICR3 unused
SYSCFG_EXTICR4 40010014

Symbol: SYSCFG_EXTICR4
   Definitions
      At line 442 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_EXTICR4 unused
SYSCFG_MEMRMP 40010000

Symbol: SYSCFG_MEMRMP
   Definitions
      At line 437 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_MEMRMP unused
SYSCFG_SCSR 40010018

Symbol: SYSCFG_SCSR
   Definitions
      At line 443 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_SCSR unused
SYSCFG_SKR 40010024

Symbol: SYSCFG_SKR
   Definitions
      At line 446 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_SKR unused
SYSCFG_SWPR 40010020



ARM Macro Assembler    Page 51 Alphabetic symbol ordering
Absolute symbols


Symbol: SYSCFG_SWPR
   Definitions
      At line 445 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: SYSCFG_SWPR unused
TAMP_BASE 40002400

Symbol: TAMP_BASE
   Definitions
      At line 51 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TAMP_BASE unused
TIM15_BASE 40014000

Symbol: TIM15_BASE
   Definitions
      At line 101 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM15_BASE unused
TIM16_BASE 40014400

Symbol: TIM16_BASE
   Definitions
      At line 102 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM16_BASE unused
TIM17_BASE 40014800

Symbol: TIM17_BASE
   Definitions
      At line 103 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM17_BASE unused
TIM1_BASE 40012C00

Symbol: TIM1_BASE
   Definitions
      At line 96 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM1_BASE unused
TIM20_BASE 40015000

Symbol: TIM20_BASE
   Definitions
      At line 104 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM20_BASE unused
TIM2_BASE 40000000

Symbol: TIM2_BASE
   Definitions



ARM Macro Assembler    Page 52 Alphabetic symbol ordering
Absolute symbols

      At line 44 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM2_BASE unused
TIM3_BASE 40000400

Symbol: TIM3_BASE
   Definitions
      At line 45 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM3_BASE unused
TIM4_BASE 40000800

Symbol: TIM4_BASE
   Definitions
      At line 46 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM4_BASE unused
TIM5_BASE 40000C00

Symbol: TIM5_BASE
   Definitions
      At line 47 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM5_BASE unused
TIM6_ARR 4000102C

Symbol: TIM6_ARR
   Definitions
      At line 542 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 146 in file main.s
Comment: TIM6_ARR used once
TIM6_BASE 40001000

Symbol: TIM6_BASE
   Definitions
      At line 48 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 535 in file STM32G4xx_REG_ASM.inc
      At line 536 in file STM32G4xx_REG_ASM.inc
      At line 537 in file STM32G4xx_REG_ASM.inc
      At line 538 in file STM32G4xx_REG_ASM.inc
      At line 539 in file STM32G4xx_REG_ASM.inc
      At line 540 in file STM32G4xx_REG_ASM.inc
      At line 541 in file STM32G4xx_REG_ASM.inc
      At line 542 in file STM32G4xx_REG_ASM.inc

TIM6_CNT 40001024

Symbol: TIM6_CNT
   Definitions
      At line 540 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM6_CNT unused



ARM Macro Assembler    Page 53 Alphabetic symbol ordering
Absolute symbols

TIM6_CR1 40001000

Symbol: TIM6_CR1
   Definitions
      At line 535 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 150 in file main.s
      At line 364 in file main.s

TIM6_CR2 40001004

Symbol: TIM6_CR2
   Definitions
      At line 536 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM6_CR2 unused
TIM6_DIER 4000100C

Symbol: TIM6_DIER
   Definitions
      At line 537 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 167 in file main.s
Comment: TIM6_DIER used once
TIM6_EGR 40001014

Symbol: TIM6_EGR
   Definitions
      At line 539 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM6_EGR unused
TIM6_PSC 40001028

Symbol: TIM6_PSC
   Definitions
      At line 541 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 142 in file main.s
Comment: TIM6_PSC used once
TIM6_SR 40001010

Symbol: TIM6_SR
   Definitions
      At line 538 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 308 in file main.s
Comment: TIM6_SR used once
TIM7_ARR 4000142C

Symbol: TIM7_ARR
   Definitions
      At line 553 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_ARR unused
TIM7_BASE 40001400




ARM Macro Assembler    Page 54 Alphabetic symbol ordering
Absolute symbols

Symbol: TIM7_BASE
   Definitions
      At line 49 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 546 in file STM32G4xx_REG_ASM.inc
      At line 547 in file STM32G4xx_REG_ASM.inc
      At line 548 in file STM32G4xx_REG_ASM.inc
      At line 549 in file STM32G4xx_REG_ASM.inc
      At line 550 in file STM32G4xx_REG_ASM.inc
      At line 551 in file STM32G4xx_REG_ASM.inc
      At line 552 in file STM32G4xx_REG_ASM.inc
      At line 553 in file STM32G4xx_REG_ASM.inc

TIM7_CNT 40001424

Symbol: TIM7_CNT
   Definitions
      At line 551 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_CNT unused
TIM7_CR1 40001400

Symbol: TIM7_CR1
   Definitions
      At line 546 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_CR1 unused
TIM7_CR2 40001404

Symbol: TIM7_CR2
   Definitions
      At line 547 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_CR2 unused
TIM7_DIER 4000140C

Symbol: TIM7_DIER
   Definitions
      At line 548 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_DIER unused
TIM7_EGR 40001414

Symbol: TIM7_EGR
   Definitions
      At line 550 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_EGR unused
TIM7_PSC 40001428

Symbol: TIM7_PSC
   Definitions
      At line 552 in file STM32G4xx_REG_ASM.inc
   Uses



ARM Macro Assembler    Page 55 Alphabetic symbol ordering
Absolute symbols

      None
Comment: TIM7_PSC unused
TIM7_SR 40001410

Symbol: TIM7_SR
   Definitions
      At line 549 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM7_SR unused
TIM8_BASE 40013400

Symbol: TIM8_BASE
   Definitions
      At line 98 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: TIM8_BASE unused
UART4_BASE 40004C00

Symbol: UART4_BASE
   Definitions
      At line 59 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: UART4_BASE unused
UART5_BASE 40005000

Symbol: UART5_BASE
   Definitions
      At line 60 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: UART5_BASE unused
UCPD1_BASE 4000A000

Symbol: UCPD1_BASE
   Definitions
      At line 74 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: UCPD1_BASE unused
UID_BASE 1FFF7590

Symbol: UID_BASE
   Definitions
      At line 201 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: UID_BASE unused
USART1_BASE 40013800

Symbol: USART1_BASE
   Definitions
      At line 99 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 558 in file STM32G4xx_REG_ASM.inc
      At line 559 in file STM32G4xx_REG_ASM.inc
      At line 560 in file STM32G4xx_REG_ASM.inc



ARM Macro Assembler    Page 56 Alphabetic symbol ordering
Absolute symbols

      At line 561 in file STM32G4xx_REG_ASM.inc
      At line 562 in file STM32G4xx_REG_ASM.inc
      At line 563 in file STM32G4xx_REG_ASM.inc
      At line 564 in file STM32G4xx_REG_ASM.inc
      At line 565 in file STM32G4xx_REG_ASM.inc
      At line 566 in file STM32G4xx_REG_ASM.inc
      At line 567 in file STM32G4xx_REG_ASM.inc
      At line 568 in file STM32G4xx_REG_ASM.inc
      At line 569 in file STM32G4xx_REG_ASM.inc

USART1_BRR 4001380C

Symbol: USART1_BRR
   Definitions
      At line 561 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_BRR unused
USART1_CR1 40013800

Symbol: USART1_CR1
   Definitions
      At line 558 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_CR1 unused
USART1_CR2 40013804

Symbol: USART1_CR2
   Definitions
      At line 559 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_CR2 unused
USART1_CR3 40013808

Symbol: USART1_CR3
   Definitions
      At line 560 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_CR3 unused
USART1_GTPR 40013810

Symbol: USART1_GTPR
   Definitions
      At line 562 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_GTPR unused
USART1_ICR 40013820

Symbol: USART1_ICR
   Definitions
      At line 566 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_ICR unused
USART1_ISR 4001381C



ARM Macro Assembler    Page 57 Alphabetic symbol ordering
Absolute symbols


Symbol: USART1_ISR
   Definitions
      At line 565 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_ISR unused
USART1_PRESC 4001382C

Symbol: USART1_PRESC
   Definitions
      At line 569 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_PRESC unused
USART1_RDR 40013824

Symbol: USART1_RDR
   Definitions
      At line 567 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_RDR unused
USART1_RQR 40013818

Symbol: USART1_RQR
   Definitions
      At line 564 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_RQR unused
USART1_RTOR 40013814

Symbol: USART1_RTOR
   Definitions
      At line 563 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_RTOR unused
USART1_TDR 40013828

Symbol: USART1_TDR
   Definitions
      At line 568 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART1_TDR unused
USART2_BASE 40004400

Symbol: USART2_BASE
   Definitions
      At line 57 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART2_BASE unused
USART3_BASE 40004800

Symbol: USART3_BASE
   Definitions



ARM Macro Assembler    Page 58 Alphabetic symbol ordering
Absolute symbols

      At line 58 in file STM32G4xx_REG_ASM.inc
   Uses
      At line 573 in file STM32G4xx_REG_ASM.inc
      At line 574 in file STM32G4xx_REG_ASM.inc
      At line 575 in file STM32G4xx_REG_ASM.inc
      At line 576 in file STM32G4xx_REG_ASM.inc
      At line 577 in file STM32G4xx_REG_ASM.inc
      At line 578 in file STM32G4xx_REG_ASM.inc
      At line 579 in file STM32G4xx_REG_ASM.inc
      At line 580 in file STM32G4xx_REG_ASM.inc
      At line 581 in file STM32G4xx_REG_ASM.inc
      At line 582 in file STM32G4xx_REG_ASM.inc
      At line 583 in file STM32G4xx_REG_ASM.inc
      At line 584 in file STM32G4xx_REG_ASM.inc

USART3_BRR 4000480C

Symbol: USART3_BRR
   Definitions
      At line 576 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_BRR unused
USART3_CR1 40004800

Symbol: USART3_CR1
   Definitions
      At line 573 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_CR1 unused
USART3_CR2 40004804

Symbol: USART3_CR2
   Definitions
      At line 574 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_CR2 unused
USART3_CR3 40004808

Symbol: USART3_CR3
   Definitions
      At line 575 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_CR3 unused
USART3_GTPR 40004810

Symbol: USART3_GTPR
   Definitions
      At line 577 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_GTPR unused
USART3_ICR 40004820

Symbol: USART3_ICR
   Definitions



ARM Macro Assembler    Page 59 Alphabetic symbol ordering
Absolute symbols

      At line 581 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_ICR unused
USART3_ISR 4000481C

Symbol: USART3_ISR
   Definitions
      At line 580 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_ISR unused
USART3_PRESC 4000482C

Symbol: USART3_PRESC
   Definitions
      At line 584 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_PRESC unused
USART3_RDR 40004824

Symbol: USART3_RDR
   Definitions
      At line 582 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_RDR unused
USART3_RQR 40004818

Symbol: USART3_RQR
   Definitions
      At line 579 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_RQR unused
USART3_RTOR 40004814

Symbol: USART3_RTOR
   Definitions
      At line 578 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_RTOR unused
USART3_TDR 40004828

Symbol: USART3_TDR
   Definitions
      At line 583 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USART3_TDR unused
USB_BASE 40005C00

Symbol: USB_BASE
   Definitions
      At line 63 in file STM32G4xx_REG_ASM.inc
   Uses
      None



ARM Macro Assembler    Page 60 Alphabetic symbol ordering
Absolute symbols

Comment: USB_BASE unused
USB_PMAADDR 40006000

Symbol: USB_PMAADDR
   Definitions
      At line 64 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: USB_PMAADDR unused
VREFBUF_BASE 40010030

Symbol: VREFBUF_BASE
   Definitions
      At line 79 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: VREFBUF_BASE unused
WWDG_BASE 40002C00

Symbol: WWDG_BASE
   Definitions
      At line 53 in file STM32G4xx_REG_ASM.inc
   Uses
      None
Comment: WWDG_BASE unused
395 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

up_delay 00000000

Symbol: up_delay
   Definitions
      At line 48 in file main.s
   Uses
      At line 329 in file main.s
      At line 354 in file main.s
      At line 388 in file main.s

1 symbol
765 symbols in table
